webpackJsonp([1],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function($) {var authorized = window.gw.authorized;\nvar $commentWindow = $('#conversation');\nvar $editable = $('.editable');\nvar tableType = window.sessionStorage.getItem('tableType');\n\n/*\n Pagination and sorting.\n */\nvar $pane = $('.tab-pane');\n\nhandlerSortAndPagination('.pagination a');\nhandlerSortAndPagination('.sortable a');\n\nfunction handlerSortAndPagination(selector) {\n  $pane.on('click', selector, function click(e) {\n    var $this = $(this);\n    var $closestPane = $this.closest('.tab-pane');\n    var $closestTabContent = $closestPane.closest('.tab-content');\n\n    var $mainContent = $closestPane.find('.tab-pane-main');\n    var $loader = $closestTabContent.find('.loader');\n\n    var entity = $closestPane.attr('id');\n    var url = $this.attr('href');\n\n    var firstElement;\n    var path;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (url.indexOf('api') === -1) {\n      url = url.substr(1, url.length);\n      firstElement = url.substr(0, url.indexOf('/'));\n\n      if (firstElement === 'app_dev.php') {\n        path = url.substr(url.indexOf('/') + 1, url.length);\n        url = '/' + firstElement + '/api/v1/elected-official/' + path +\n                '&entity=' + entity;\n      } else {\n        url = '/api/v1/elected-official/' + url + '&entity=' + entity;\n      }\n    }\n\n    $mainContent.html('');\n\n    $loader.show();\n    $.ajax({\n      url: url,\n      success: function success(data) {\n        $loader.hide();\n        $mainContent.html(data);\n      }\n    });\n  });\n}\n\n\n$('[data-toggle=\"tooltip\"]').tooltip();\n\n$editable.editable({ stylesheets: false, type: 'textarea', showbuttons: 'bottom', display: true, emptytext: ' ' });\n$editable.off('click');\n\n$pane.on('click', 'table .glyphicon-pencil', function click(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  if (e.currentTarget.dataset.noEditable !== undefined) return;\n  if (!authorized) {\n    $('#modal-window').modal('show'); // Open login modal window\n    window.sessionStorage.setItem('tableType', $(e.target).closest('.tab-pane')[0].id);\n    window.sessionStorage.setItem('dataId', $(e.currentTarget).closest('tr').attr('data-id'));\n    window.sessionStorage.setItem('field', Number(($(e.currentTarget).closest('td'))[0].cellIndex) + 1);\n  } else {\n    $(e.currentTarget).closest('td').find('.editable').editable('toggle');\n  }\n});\n\nfunction clearUrl(url) {\n  var result = url;\n  var indexOfHashTag;\n  var indexOfQuestionMark;\n\n  indexOfHashTag = result.indexOf('#');\n  if (indexOfHashTag !== -1) {\n    result = result.substring(0, indexOfHashTag);\n  }\n\n  indexOfQuestionMark = result.indexOf('?');\n  if (indexOfQuestionMark !== -1) {\n    result = result.substring(0, indexOfQuestionMark);\n  }\n\n  return result;\n}\n\n/**\n * Click on comment icon.\n */\n$pane.on('click', '.vote', function click() {\n  var fbCommentPrevElem;\n  var fbCommentElem;\n  var fbCommentUrl;\n  var fbCommentElemExist;\n  var $element = $(this);\n\n  var id = $element.attr('id');\n\n  var electedName = $('.electedController').attr('data-elected-name');\n  var name = $element.attr('data-legislation-name');\n\n    // Remove existing Facebook Comment form\n  var fbCommentElemExistList = $('.fb-comments', $commentWindow);\n\n  var i = 0;\n  for (i; i < fbCommentElemExistList.length; i++) {\n    fbCommentElemExist = fbCommentElemExistList[i];\n    fbCommentElemExist.parentNode.removeChild(fbCommentElemExist);\n  }\n\n    // Create new Facebook Comment form\n  fbCommentPrevElem = $('.modal-body', $commentWindow);\n  fbCommentElem = document.createElement('DIV');\n  fbCommentUrl = clearUrl(window.location.href);\n\n  $(fbCommentElem).addClass('fb-comments');\n  fbCommentElem.setAttribute('id', 'comment-form');\n  fbCommentElem.setAttribute('data-href', fbCommentUrl + '#vote_' + id);\n  fbCommentElem.setAttribute('data-numposts', 5);\n  fbCommentPrevElem.append(fbCommentElem);\n\n  FB.XFBML.parse(null, function load() {\n    $('.loader', $commentWindow).hide();\n  });\n\n  $('#myModalLabel').text(electedName + ' - ' + name);\n  $commentWindow.modal('show');\n  $('.loader', $commentWindow).show();\n});\n\n/**\n * Save event from xEditable, after click on check icon\n */\n$pane.on('save', 'a', function save(e, params) {\n  var sendObject;\n  var entityType = $(this).closest('table').attr('data-entity-type');\n  var id = $(this).closest('tr').attr('data-id');\n  var field = Object.keys($(this).closest('td')[0].dataset)[0];\n\n  if (field === 'vote' || field === 'didElectedOfficialProposeThis') {\n        // Current field owned by ElectedOfficialVote\n    entityType = 'ElectedOfficialVote';\n    id = $(e.currentTarget).parent().find('span')[0].dataset.id;\n  }\n\n  sendObject = {\n    editRequest: {\n      entityName: entityType,\n      entityId: id,\n      changes: {}\n    }\n  };\n\n  sendObject.editRequest.changes[field] = params.newValue;\n  sendObject.editRequest = JSON.stringify(sendObject.editRequest);\n\n  $.ajax(window.gw.urls.edit_request, {\n    method: 'POST',\n    data: sendObject,\n    dataType: 'text/json',\n    success: function success(response) {\n      console.log(response.responseText);\n    },\n    error: function error(err) {\n      if (err.status === 401) {\n        $('#modal-window').modal('show'); // Open login modal window\n      }\n    }\n  });\n});\n\n$pane.on('click', 'table .add', function click(e) {\n  var tabPane;\n  var currentEntity;\n\n  tabPane = $(e.target).closest('.tab-pane');\n  tableType = tabPane[0].id;\n  if (!authorized) {\n    $('#modal-window').modal('show'); // Open login modal window\n    window.sessionStorage.setItem('tableType', tableType);\n    return false;\n  }\n  currentEntity = null;\n\n  if (tableType === 'Votes') {\n    currentEntity = 'Legislation';\n    $('#addVotes').modal('toggle').find('form')[0].reset();\n  } else if (tableType === 'Contributions') {\n    currentEntity = 'Contribution';\n    $('#addContributions').modal('toggle').find('form')[0].reset();\n  } else if (tableType === 'Endorsements') {\n    currentEntity = 'Endorsement';\n    $('#addEndorsements').modal('toggle').find('form')[0].reset();\n  } else if (tableType === 'Statements') {\n    currentEntity = 'PublicStatement';\n    $('#addStatements').modal('toggle').find('form')[0].reset();\n\n        /*\n         Set get url callback.\n         */\n    $('.url-input').on('keyup', function keyup() {\n      var matchUrl;\n      matchUrl = /\\b(https?):\\/\\/([\\-A-Z0-9.]+)(\\/[\\-A-Z0-9+&@#\\/%=~_|!:,.;]*)?(\\?[A-Z0-9+&@#\\/%=~_|!:,.;]*)?/i;\n      if (matchUrl.test($(this).val())) {\n        return $.ajax(window.gw.urls.check_url, {\n          method: 'GET',\n          data: {\n            url: $(this).val().match(matchUrl)[0]\n          },\n          success: function success(response) {\n            var urlContent;\n            console.log(response);\n            urlContent = $('#url-statement');\n            urlContent.find('.url-content-title').text('');\n            urlContent.find('.url-content-body').text('');\n            urlContent.find('.url-content-img').attr('src', '');\n            urlContent.find('.url-content-title').text(response.data.title);\n            if (response.type === 'html') {\n              urlContent.find('.url-content-img').hide();\n              urlContent.find('.url-content-body').text(response.data.body);\n            }\n            if (response.type === 'youtube') {\n              urlContent.find('.url-content-img').attr('src', response.data.preview);\n            }\n            if (response.type === 'image') {\n              urlContent.find('.url-content-img').attr('src', response.data.preview);\n            }\n            return urlContent.slideDown();\n          },\n          error: function error(err) {\n            var urlContent;\n            urlContent = $('#url-statement');\n            urlContent.find('.url-content-title').text('');\n            urlContent.find('.url-content-body').text('');\n            urlContent.find('.url-content-img').attr('src', '');\n            urlContent.find('.url-content-body').text(err.responseText);\n            return urlContent.slideDown();\n          }\n        });\n      }\n      return true;\n    });\n  }\n\n  if (tabPane.hasClass('loaded')) {\n    return false;\n  }\n\n  tabPane[0].classList.add('loaded');\n\n  if (currentEntity === 'Legislation') {\n    $('#addVotes').find('[data-provide=\"datepicker\"]').on('changeDate', function changeDate() {\n      return $(this).datepicker('hide');\n    });\n        // compiledTemplate = Handlebars.compile($('#legislation-vote').html());\n        // return $('#electedVotes').html(compiledTemplate(JSON.parse(window.gw.electedOfficial)));\n  } else if (currentEntity === 'PublicStatement') {\n    return $('#addStatements').find('[data-provide=\"datepicker\"]').on('changeDate', function changeDate() {\n      return $(this).datepicker('hide');\n    });\n  }\n  return true;\n});\n\nwindow.addItem = function addItem(e) {\n  var add;\n  var associations;\n  var childs;\n  var data;\n  var entityType;\n  var i;\n  var key;\n  var len;\n  var modal;\n  var modalType;\n  var newRecord;\n  var obj;\n  var ref;\n  var ref1;\n  var ref2;\n  var rowTemplate;\n  var select;\n  var selectName;\n  var selectedText;\n  var selectedValue;\n  var sendObject;\n  var value;\n  var person = JSON.parse(window.gw.electedOfficial);\n  var allRequiredFieldsFilled;\n  var oneChildFieldFilled = false;\n\n  newRecord = {};\n  modal = $(e.target).closest('.modal');\n  modalType = modal[0].id;\n  entityType = modal[0].dataset.entityType;\n\n    /*\n     Get value from input fields.\n     */\n  modal.find('input[type=\"text\"]').each(function loop(index, element) {\n    var fieldName;\n    fieldName = Object.keys(element.dataset)[0];\n    newRecord[fieldName] = element.value;\n    return element.value;\n  });\n\n    /*\n     Get value from texarea's.\n     */\n  modal.find('textarea').each(function loop(index, element) {\n    var fieldName;\n    fieldName = Object.keys(element.dataset)[0];\n    newRecord[fieldName] = element.value;\n    return element.value;\n  });\n\n    /*\n     Get value from hidden input fields.\n     */\n  modal.find('input[type=\"hidden\"]').each(function loop(index, element) {\n    var fieldName;\n    fieldName = Object.keys(element.dataset)[0];\n    newRecord[fieldName] = element.value;\n    return element.value;\n  });\n\n  associations = {};\n  if (modalType !== 'addVotes') {\n    associations.electedOfficial = person.id;\n  } else {\n    associations.government = person.government.id;\n  }\n  childs = [];\n\n  if (modalType === 'addVotes') {\n    allRequiredFieldsFilled = true;\n    checkFields('addVotesForm');\n    if (!allRequiredFieldsFilled) {\n      return false;\n    }\n\n        /*\n         Add information about votes.\n         */\n    modal.find('#electedVotes').find('tr[data-elected]').each(function loop(idx, element) {\n      var childEntityName;\n      var fields;\n\n      $(element).find('select').each(function loop2(index, el) {\n        var fieldName;\n        if (el.value) {\n          fieldName = Object.keys(el.dataset)[0];\n          newRecord[fieldName] = el.value;\n        }\n        return el.value;\n      });\n\n            /*\n             Add only if all fields is set.\n             */\n      if (Object.keys(data).length === 2) {\n        oneChildFieldFilled = true;\n        fields = Object.create(null, {});\n        fields.fields = data;\n        fields.associations = Object.create(null, {});\n        fields.associations[element.attr('data-entity-type')] = element.attr('data-elected');\n        childEntityName = element.parent().parent().attr('data-entity-type');\n        return childs.push({\n          entityName: childEntityName,\n          fields: fields\n        });\n      }\n      return true;\n    });\n\n    if (!oneChildFieldFilled) {\n      window.alert('Please fill at least one of the Vote fields.');\n      return false;\n    }\n\n    associations[selectName] = selectedValue;\n  } else if (modalType === 'addContributions') {\n    allRequiredFieldsFilled = true;\n    checkFields('addContributionsForm');\n    if (!allRequiredFieldsFilled) {\n      return false;\n    }\n    newRecord[selectName] = selectedValue;\n  } else if (modalType === 'addEndorsements') {\n    allRequiredFieldsFilled = true;\n    checkFields('addEndorsementsForm');\n    if (!allRequiredFieldsFilled) {\n      return false;\n    }\n    newRecord[selectName] = selectedValue;\n  } else if (modalType === 'addStatements') {\n    allRequiredFieldsFilled = true;\n    checkFields('addStatementsForm');\n    if (!allRequiredFieldsFilled) {\n      return false;\n    }\n    associations[selectName] = selectedValue;\n  }\n\n  function checkFields(formId) {\n    allRequiredFieldsFilled = true;\n    $('#' + formId).find('.form-control').each(function loop(idx, element) {\n      if (element.required && element.value === '') {\n        if (element.tagName === 'SELECT') {\n          window.alert('Please select type.');\n        } else {\n          window.alert('Please fill required field.');\n        }\n        element.focus();\n        allRequiredFieldsFilled = false;\n      }\n      return false;\n    });\n\n    select = modal.find('select')[0];\n    selectName = select.name;\n    selectedValue = select.options[select.selectedIndex].value;\n    selectedText = $(select).find(':selected').text();\n  }\n\n  sendObject = {\n    createRequest: {\n      entityName: entityType,\n      user: window.gw.user_id,\n      fields: {\n        fields: newRecord,\n        associations: associations,\n        childs: childs\n      }\n    }\n  };\n\n    /*\n     Append new entity to table.\n     */\n  rowTemplate = Handlebars.compile($('#row-' + modalType).html());\n  data = Object.create(null, {});\n  ref = sendObject.createRequest.fields.fields;\n  for (key in ref) {\n    if (ref.hasOwnProperty(key)) {\n      value = ref[key];\n      data[key] = value;\n    }\n  }\n  data.username = window.gw.username;\n  console.log(person);\n  if (modalType === 'addVotes') {\n        /*\n         Check if user specified how current elected official voted.\n         */\n    add = false;\n    ref1 = sendObject.createRequest.fields.childs;\n    for (i = 0, len = ref1.length; i < len; i++) {\n      obj = ref1[i];\n      if (Number(obj.fields.associations.electedOfficial) === Number(person.id) && obj.fields.fields.vote) {\n        add = true;\n        ref2 = obj.fields.fields;\n        for (key in ref2) {\n          if (ref2.hasOwnProperty(key)) {\n            value = ref2[key];\n            data[key] = value;\n          }\n        }\n        break;\n      }\n    }\n    if (add) {\n      data.category = selectedText;\n      $('#Votes tr:last-child').before(rowTemplate(data));\n    }\n  } else if (modalType === 'addContributions') {\n        /*\n         Format contribution amount.\n         */\n    data.contributorType = selectedText;\n    data.contributionAmount = numeral(data.contributionAmount).format('0,000');\n    $('#Contributions tr:last-child').before(rowTemplate(data));\n  } else if (modalType === 'addEndorsements') {\n    data.endorserType = selectedText;\n    $('#Endorsements tr:last-child').before(rowTemplate(data));\n  } else if (modalType === 'addStatements') {\n    data.category = selectedText;\n    $('#Statements tr:last-child').before(rowTemplate(data));\n  }\n\n    /*\n     Send create request to api.\n     */\n  console.log(sendObject);\n  $.ajax({\n    url: window.gw.urls.create_request,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    data: sendObject,\n    success: function success(res) {\n      if (modalType === 'addVotes') {\n        alert('Thanks for your submission. Your entry will appear' +\n                ' on the elected official profiles within 3-5 business days');\n      }\n      console.log(res);\n    }\n  });\n  return modal.modal('hide');\n};\n\n/*\n Show modal for previously selected modal window.\n */\nif (tableType) {\n  $('.add', '#' + tableType).click();\n  window.sessionStorage.removeItem('tableType');\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/elected/handlers.js\n ** module id = 0\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/elected/handlers.js?");

/***/ }
]);