webpackJsonp([2],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function($) {var sublayer = __webpack_require__(44);\n__webpack_require__(38);\n__webpack_require__(49);\n\n$('#year-selector').change(function change() {\n  $('#map').hide();\n  gw.map.year = $(this).find('option:selected').text();  // eslint-disable-line\n  sublayer.removeAllSubLayers();\n  sublayer.reInit();\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/home/index.js\n ** module id = 0\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/home/index.js?");

/***/ },

/***/ 44:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function($) {var config = __webpack_require__(45);\nvar Tooltip = __webpack_require__(47);\nvar Style = __webpack_require__(48);\n/**\n * ============================\n *       Sublayer module\n * ============================\n */\n\n// Polygon variables and functions\nvar polygon = {};\n// What should our polygon hover style look like?\nvar polygonStyle = {\n  color: '#808080',\n  weight: 1,\n  opacity: 1,\n  fillOpacity: 0.6,\n  fillColor: '#000000',\n  clickable: false\n};\nfunction drawAppropriatePolygon(data) {\n  removeAllHoverShapes();\n  polygon = new L.GeoJSON(JSON.parse(data.geometry), {\n    style: polygonStyle\n  });\n  config.map.addLayer(polygon);\n  polygon.cartodb_id = data.cartodb_id;\n}\n/**\n * Initialization County SubLayer\n *\n * Tooltip window\n * Tooltip work with 3.11-13 version, 3.15 is buggy\n *\n * @public\n */\nfunction initCountySubLayer(altType) {\n  // Default county color\n  var cartocss = '#layer { polygon-fill: #DDDDDD; polygon-opacity: 0.7; line-color: #FFF;' +\n    ' line-width: 0.5; line-opacity: 1; } ';\n  var cLayer;\n  var _altType;\n  var colorized = window.gw.map.coloringConditions.colorized;\n\n  if (colorized) {\n    cartocss += getConditionsColorsAsCartoCss({});\n  }\n\n  cLayer = {\n    cartocss: cartocss,\n    sql: \"SELECT *, (data_json::json->>'\" + window.gw.map.year +\n    \"')::float AS data, ST_AsGeoJSON(the_geom) AS geometry FROM \" +\n    window.gw.environment + \" WHERE  alt_type_slug = '\" +\n    altType + \"'\",\n    interactivity: ['cartodb_id', 'slug', 'alt_type_slug', 'geometry', 'data', 'name']\n  };\n\n  config.countySubLayer = config.baseLayer.createSubLayer(cLayer);\n\n  _altType = altType.toLowerCase();\n  config.subLayers[_altType] = config.countySubLayer;\n  Tooltip.init(_altType);\n}\n/**\n * Initialization Marker SubLayer\n *\n * Tooltip window\n * Tooltip work with 3.11-13 version, 3.15 is buggy\n *\n * @public\n *\n */\nfunction initMarkerSubLayer(altType) {\n  var _altType = altType.toLowerCase();\n  var cartocss = '';\n\n  var isRangeLegend = window.gw.map.coloringConditions.colorized;\n  var options = { isMarkerLayer: true };\n  var legendColorsAsCartoCss = Style.getColorsFromLegend(altType);\n\n  options.markerFileCss = legendColorsAsCartoCss.markerFileCss;\n  options.markerFillColorCss = legendColorsAsCartoCss.markerFillColorCss;\n  options.markerLineColorColorCss = legendColorsAsCartoCss.markerLineColorColorCss;\n\n  if (isRangeLegend) {\n    cartocss += '#layer { ' +\n      legendColorsAsCartoCss.markerFileCss +\n      legendColorsAsCartoCss.markerLineColorColorCss +\n      ' line-color: #FFF; line-width: 0.5; line-opacity: 1; } ';\n    cartocss += getConditionsColorsAsCartoCss(options);\n  } else {\n    cartocss += '#layer { ' +\n      legendColorsAsCartoCss.markerFileCss +\n      legendColorsAsCartoCss.markerFillColorCss +\n      ' line-color: #FFF; line-width: 0.5; line-opacity: 1; } ';\n  }\n  config.subLayers[_altType] = config.baseLayer.createSubLayer({\n    sql: \"SELECT *, (data_json::json->>'\" + window.gw.map.year +\n    \"')::float AS data, GeometryType(the_geom) AS geometrytype FROM \" + window.gw.environment +\n    \" WHERE alt_type_slug = '\" + altType + \"'\",\n    cartocss: cartocss,\n    interactivity: ['cartodb_id', 'slug', 'alt_type_slug', 'geometrytype', 'data', 'name']\n  });\n  Tooltip.init(_altType);\n}\n\n/**\n * @param options\n * @returns {string}\n */\nfunction getConditionsColorsAsCartoCss(options) {\n  var cartocss = '';\n  var conditionsAsCartoCss = '';\n  var conditions = window.gw.map.coloringConditions.conditions;\n\n  conditionsAsCartoCss += Style.getPeriodConditionsAsCss(conditions, options);\n  conditionsAsCartoCss += Style.getSimpleConditionsAsCss(conditions, options);\n  conditionsAsCartoCss += Style.getNullConditionAsCss(conditions, options);\n\n  if (conditionsAsCartoCss === '') {\n    console.warn('Can\\'t find any condition, please verify your window.gw.map.coloringConditions.conditions data');\n    console.warn('or check getPeriodConditionsAsCss, getSimpleConditionsAsCss, getNullConditionAsCss functions');\n  }\n\n  cartocss += conditionsAsCartoCss;\n  return cartocss;\n}\n\n/**\n * Set handlers on SubLayers\n *\n * @public\n *\n */\nfunction initSublayerHandlers() {\n  var hovers = [];\n  var key;\n  var layer;\n  for (key in config.subLayers) {\n    if (config.subLayers.hasOwnProperty(key)) {\n      layer = config.subLayers[key];\n      // Allow events on layer\n      layer.setInteraction(true);\n      /**\n       * Show tooltip on hover\n       * Or highlight current county\n       * It depends on the current Layer position\n       */\n      layer.bind('mouseover', function mouseover(e, latlon, pxPos, data, layerIndex) {\n        hovers[layerIndex] = 1;\n        /**\n         * If hover active\n         */\n        if (_.some(hovers)) {\n          $('#map').css('cursor', 'pointer');\n          /**\n           * If hover on county layer\n           */\n          if (layerIndex === config.countySubLayer._position) {\n            drawAppropriatePolygon(data);\n          } else {\n            removeAllHoverShapes();\n          }\n          /**\n           * Open current tooltip, close another\n           */\n          _.forOwn(config.tooltips, function loop(tooltip) {\n            if (tooltip !== null) {\n              if (tooltip.getLayerIndex() === layerIndex) {\n                tooltip.enable();\n              } else {\n                tooltip.disable();\n              }\n            }\n          });\n        }\n      });\n      /**\n       * Hide tooltip on hover\n       * Or remove highlight on current county\n       * It depends on the current Layer position\n       */\n      layer.bind('mouseout', function mouseout(layerIndex) {\n        hovers[layerIndex] = 0;\n        /**\n         * If hover not active\n         */\n        if (!_.some(hovers)) {\n          $('#map').css('cursor', 'auto');\n          removeAllHoverShapes();\n          /**\n           *  Close all tooltips, if cursor outside of layers\n           */\n          _.forOwn(config.tooltips, function loop(tooltip) {\n            if (tooltip !== null) {\n              if (tooltip.getLayerIndex() === layerIndex) {\n                tooltip.disable();\n              }\n            }\n          });\n        }\n      });\n      /**\n       * Change window location after click on marker or county\n       */\n      layer.on('featureClick', function featureClick(event, latlng, pos, data) {\n        var pathname;\n        if (!data.alt_type_slug || !data.slug) {\n          alert('Please verify your data, altTypeSlug or governmentSlug may can not defined, more info in console.log');\n          return true;\n        }\n        pathname = window.location.pathname;\n        if (pathname[pathname.length - 1] !== '/') {\n          pathname += '/';\n        }\n        window.location.pathname = pathname + data.alt_type_slug + '/' + data.slug;\n\n        return true;\n      });\n    }\n  }\n}\n/**\n * @public\n */\nfunction removeAllHoverShapes() {\n  config.map.removeLayer(polygon);\n  polygon.cartodb_id = null;\n}\n/**\n * Remove all sub layers\n * @public\n */\nfunction removeAllSubLayers() {\n  var key;\n  removeAllHoverShapes();\n  for (key in config.subLayers) {\n    if (config.subLayers.hasOwnProperty(key)) {\n      config.subLayers[key].remove();\n    }\n  }\n}\n\n/**\n * Create additional subLayers by altType\n *\n * @param altTypes Unique altTypes from MySQL\n */\nfunction initSubLayers(altTypes) {\n  var countySubLayers = altTypes.filter(function loop(altType) {\n    return (altType.geometrytype === 'MULTIPOLYGON' || altType.geometrytype === 'POLYGON');\n  });\n  var markerSubLayers = altTypes.filter(function loop(altType) {\n    return (altType.geometrytype !== 'MULTIPOLYGON' && altType.geometrytype !== 'POLYGON');\n  });\n  countySubLayers.forEach(function loop(altType) {\n    initCountySubLayer(altType.alt_type_slug);\n  });\n  markerSubLayers.forEach(function loop(altType) {\n    initMarkerSubLayer(altType.alt_type_slug);\n  });\n  initSublayerHandlers();\n}\n\n/**\n * Reinitialize map with\n */\nfunction reInit(settings) {\n  var altTypes;\n  if (settings) {\n    window.gw.map.coloringConditions.conditions = (settings.conditions.length > 0)\n        ? settings.conditions\n        : config.defaultConditions;\n  }\n  altTypes = config.layersData.rows.filter(function loop(alt) {\n    return !!alt.alt_type_slug;\n  });\n  initSubLayers(altTypes);\n  Tooltip.initTooltips();\n}\n\nmodule.exports = {\n  initCountySubLayer: initCountySubLayer,\n  initMarkerSubLayer: initMarkerSubLayer,\n  initSublayerHandlers: initSublayerHandlers,\n  removeAllHoverShapes: removeAllHoverShapes,\n  removeAllSubLayers: removeAllSubLayers,\n  initSubLayers: initSubLayers,\n  reInit: reInit\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/home/map/sublayer.js\n ** module id = 44\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/home/map/sublayer.js?");

/***/ },

/***/ 45:
/***/ function(module, exports, __webpack_require__) {

	eval("var map;\nvar legend;\nvar baseLayer;\nvar countySubLayer;\nvar subLayers = {};\nvar layersData;\nvar tooltips = {};\nvar defaultConditions;\nvar debug;\n\nvar glob = __webpack_require__(46);\n\nif (!glob.isTest) {\n  /**\n   * Map object\n   *\n   * window.gw.map = {\n *     debug: true,\n *     zoom: 6,\n *     centerLatitude: 37.9,\n *     centerLongitude: -119.7,\n *     position: 'left',\n *     username: 'shemindmitry',\n *     year: '2014',\n *     county: {},\n *     legendTypes: ['altTypes', 'range'],\n *     colorizedCountyConditions: {},\n *     legend: [],\n * }\n   *\n   */\n  window.gw.map = JSON.parse(window.gw.map);\n\n  /**\n   * window.gw.map.coloringConditions = {\n    \"colorized\": true,\n    \"fieldName\": \"total_debt_total_revenue\",\n    \"conditions\": [\n        {\n            \"type\": \"simple\",\n            \"color\": \"#ff0000\",\n            \"value\": \"4\",\n            \"operation\": \"<=\"\n        },\n        {\n            \"type\": \"simple\",\n            \"color\": \"#ffff00\",\n            \"value\": \"2\",\n            \"operation\": \"<=\"\n        },\n        {\n            \"type\": \"simple\",\n            \"color\": \"#80ff00\",\n            \"value\": \"1\",\n            \"operation\": \"<=\"\n        },\n        {\n            \"type\": \"null\",\n            \"color\": \"#000000\"\n        }\n    ],\n    \"field_mask\": \"0.0%\",\n    \"localized_name\": \"Total Debt / Total Revenue\"\n    }\n   */\n  defaultConditions = JSON.parse(JSON.stringify(window.gw.map.coloringConditions));\n\n  /**\n   * window.gw.map.legend = [\n   {\n       \"shape\": \"/img/upload/shape/circle.svg\",\n       \"title\": \"City\",\n       \"color\": \"#f702d0\",\n       \"order\": 1,\n       \"altType\": \"City\"\n   },\n   {\n       \"title\": \"County\",\n       \"color\": \"#828282\",\n       \"order\": 2,\n       \"altType\": \"County\"\n   },\n   {\n       \"shape\": \"/img/upload/shape/triangle.svg\",\n       \"title\": \"School district\",\n       \"color\": \"#5ff5f5\",\n       \"order\": 3,\n       \"altType\": \"School_District\"\n   },\n   {\n       \"shape\": \"/img/upload/shape/square.svg\",\n       \"title\": \"Special district\",\n       \"color\": \"#57ff7c\",\n       \"order\": 4,\n       \"altType\": \"Special_District\"\n   }\n   ]\n   * @type {Array.<T>}\n   */\n  legend = window.gw.map.legend.sort(function loop(a, b) {\n    return a.order > b.order;\n  });\n\n  debug = window.localStorage.getItem('debug');\n}\n\nmodule.exports = {\n  map: map,\n  legend: legend,\n  baseLayer: baseLayer,\n  countySubLayer: countySubLayer,\n  subLayers: subLayers,\n  layersData: layersData,\n  tooltips: tooltips,\n  defaultConditions: defaultConditions,\n  debug: debug\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/home/map/config.js\n ** module id = 45\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/home/map/config.js?");

/***/ },

/***/ 46:
/***/ function(module, exports) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {module.exports = {\n  isTest: typeof global.it === 'function'\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/global.js\n ** module id = 46\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/global.js?");

/***/ },

/***/ 47:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function($) {var config = __webpack_require__(45);\n\n/**\n * Init tooltip\n * @param altType\n */\nfunction init(altType) {\n  var tooltipTpl = '<div class=\"cartodb-tooltip-content-wrapper\"> <div class=\"cartodb-tooltip-content\"></p>';\n\n  if (config.debug) {\n    tooltipTpl += '<p>{{name}} ({{data}})</p>';\n  } else {\n    tooltipTpl += '<p>{{name}} {{#dataFormatted}} ({{dataFormatted}}) {{/dataFormatted}} </p>';\n  }\n\n  tooltipTpl += '</div></div>';\n  config.tooltips[altType] = new cdb.geo.ui.Tooltip({\n    layer: config.subLayers[altType],\n    template: tooltipTpl,\n    width: 200,\n    position: 'bottom|right'\n  });\n  config.tooltips[altType].setMask(window.gw.map.coloringConditions.field_mask.mask);\n}\n\n\n/**\n * Add tooltips on page\n * @type {*[]}\n */\nfunction initTooltips() {\n  var $mapWrap = $('#map_wrap');\n  var $cartodbTooltips = $mapWrap.find('cartodb-tooltip');\n\n  if ($cartodbTooltips.length !== 0) {\n    $cartodbTooltips.remove();\n  }\n\n  _.forOwn(config.tooltips, function loop(tooltip) {\n    $('#map_wrap').append(tooltip.render().el);\n  });\n}\n\n\nmodule.exports = {\n  init: init,\n  initTooltips: initTooltips\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/home/map/tooltip.js\n ** module id = 47\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/home/map/tooltip.js?");

/***/ },

/***/ 48:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function($) {var config = __webpack_require__(45);\n\n/**\n * Get period conditions as css string\n *\n * @param conditions - window.gw.map.coloringConditions.conditions\n * @param options\n * @returns {string} CSS String || ''\n */\nfunction getPeriodConditionsAsCss(conditions, options) {\n  var stroke;\n  var min;\n  var max;\n  var style;\n  var cssConditions = '';\n  var periodConditions = getConditionsByType(conditions, 'period');\n\n  if (!conditions) {\n    console.warn('You don\\'t pass condition array into getPeriodConditionsAsCss() function');\n    return '';\n  }\n\n  // If simple conditions found\n  if (periodConditions.length !== 0) {\n    periodConditions.forEach(function loop(condition) {\n      // Fill polygon or marker\n      var fillRule = options.isMarkerLayer ? 'marker-fill' : 'polygon-fill';\n      var fillColor = options.isMarkerLayer ? condition.color : condition.color;\n      var markerTypeCss = options.markerFileCss ? options.markerFileCss : '';\n      var fill = fillRule + ': ' + fillColor + ';' + markerTypeCss;\n      // Stroke polygon or marker\n      var lineColorRule = options.isMarkerLayer ? 'marker-line-color' : 'line-color';\n      var lineColor = options.isMarkerLayer ? condition.color : '#FFFFFF';\n      var line = lineColorRule + ': ' + lineColor + ';';\n      if (options.markerLineColorColorCss) {\n        line = options.markerLineColorColorCss;\n      }\n      stroke = options.isMarkerLayer ? 'marker-line-width: 1;' : 'line-width: 0.5;';\n      min = '[data >= ' + condition.min + ']';\n      max = '[data <= ' + condition.max + ']';\n      style = '{ ' + fill + line + stroke + ' line-opacity: 1; polygon-opacity: 0.3; } ';\n      cssConditions += '#layer' + min + max + style;\n    });\n  }\n  return cssConditions || '';\n}\n/**\n * Get simple conditions as css string\n *\n * @param conditions - window.gw.map.coloringConditions.conditions\n * @param options\n * @returns {string} CSS String || ''\n */\nfunction getSimpleConditionsAsCss(conditions, options) {\n  var opt;\n  var cssConditions;\n  var simpleConditions;\n\n  var fillRule;\n  var fillColor;\n  var markerTypeCss;\n  var fill;\n\n  var lineColorRule;\n  var lineColor;\n  var line;\n\n  var stroke;\n  var value;\n  var style;\n\n  if (!conditions) {\n    console.warn('You don\\'t pass condition array into getSimpleConditionsAssCss() function');\n    return '';\n  }\n\n  opt = $.extend({}, options);\n\n  cssConditions = '';\n  simpleConditions = getConditionsByType(conditions, 'simple');\n\n  // If simple conditions found\n  if (simpleConditions.length !== 0) {\n    // Sort by desc, because cartodb specifically processes css rules\n    simpleConditions.sort(function loop(cur, next) {\n      return cur.value < next.value;\n    });\n    simpleConditions.forEach(function loop(condition) {\n      // Fill polygon or marker\n      fillRule = opt.isMarkerLayer ? 'marker-fill' : 'polygon-fill';\n      fillColor = opt.isMarkerLayer ? condition.color : condition.color;\n      markerTypeCss = opt.markerFileCss ? opt.markerFileCss : '';\n      fill = fillRule + ': ' + fillColor + '; ' + markerTypeCss;\n\n      // Stroke polygon or marker\n      lineColorRule = opt.isMarkerLayer ? 'marker-line-color' : 'line-color';\n      lineColor = opt.isMarkerLayer ? condition.color : '#FFFFFF';\n      line = lineColorRule + ': ' + lineColor + ';';\n      if (opt.markerLineColorColorCss) {\n        line = opt.markerLineColorColorCss;\n      }\n\n      stroke = opt.isMarkerLayer ? 'marker-line-width: 1;' : 'line-width: 0.5;';\n      value = '[data ' + condition.operation + ' ' + condition.value + ']';\n      style = '{ ' + fill + line + stroke + ' line-opacity: 1; polygon-opacity: 0.3; } ';\n\n      cssConditions += '#layer' + value + style;\n    });\n  }\n  return cssConditions || '';\n}\n\n/**\n * Get Null condition as css string\n *\n * @param conditions - window.gw.map.coloringConditions.conditions\n * @param options\n * @returns {string} CSS String || ''\n */\nfunction getNullConditionAsCss(conditions, options) {\n  var opt = $.extend({}, options);\n  var cssConditions = '';\n  var nullCondition = getConditionsByType(conditions, 'null');\n\n  var fillRule;\n  var fillColor;\n  var markerTypeCss;\n  var fill;\n\n  var lineColorRule;\n  var lineColor;\n  var line;\n\n  var stroke;\n  var style;\n\n  if (!conditions) {\n    console.warn('You don\\'t pass condition array into getNullConditionAsCss() function');\n    return '';\n  }\n  // If null condition found\n  if (nullCondition.length !== 0) {\n    // Fill polygon or marker\n    fillRule = opt.isMarkerLayer ? 'marker-fill' : 'polygon-fill';\n    fillColor = opt.isMarkerLayer ? nullCondition[0].color : nullCondition[0].color;\n    markerTypeCss = opt.markerFileCss ? opt.markerFileCss : '';\n    fill = fillRule + ': ' + fillColor + ';' + markerTypeCss;\n\n    // Stroke polygon or marker\n    lineColorRule = opt.isMarkerLayer ? 'marker-line-color' : 'line-color';\n    lineColor = opt.isMarkerLayer ? nullCondition[0].color : '#FFFFFF';\n    line = lineColorRule + ': ' + lineColor + ';';\n    if (opt.markerLineColorColorCss) {\n      line = opt.markerLineColorColorCss;\n    }\n\n    stroke = opt.isMarkerLayer ? 'marker-line-width: 1;' : 'line-width: 0.5;';\n    style = '{ ' + fill + line + stroke + ' line-opacity: 1; polygon-opacity: 0.3; } ';\n    cssConditions += '#layer[data = null]' + style;\n  }\n  return cssConditions || '';\n}\n\n\n/**\n * Get colors for map layer FROM legend by altType !!!\n *\n * @param altType\n */\nfunction getColorsFromLegend(altType) {\n  var foundLegend;\n  var url;\n  var markerFileCss;\n  var markerFillColorCss;\n  var markerLineColorColorCss;\n\n  // Search current altType in legend (window.gw.map.legend = [Object, Object, ...])\n  foundLegend = config.legend.filter(function loop(item) {\n    return item.altType === altType;\n  })[0];\n\n  if (!foundLegend) {\n    return false;\n  }\n\n  if (config.debug) {\n    url = 'http://california.govwiki.freedemster.com';\n  } else {\n    url = window.location.href.substr(0, window.location.href.length - 1);\n  }\n\n  if (foundLegend.color || foundLegend.shape) {\n    // If url to marker exist, create new css rule (path to marker icon)\n    markerFileCss = 'marker-file: url(' + url + foundLegend.shape + ');';\n\n    markerFillColorCss = 'marker-fill: ' + foundLegend.color + '; ';\n    markerLineColorColorCss = 'marker-line-color: ' + foundLegend.color + '; ';\n  } else {\n    console.error('Legend not contain style properties, please fix it !!!');\n    markerFileCss = '';\n    markerFillColorCss = '';\n    markerLineColorColorCss = '';\n  }\n\n  return {\n    markerFileCss: markerFileCss,\n    markerFillColorCss: markerFillColorCss,\n    markerLineColorColorCss: markerLineColorColorCss\n  };\n}\n\n\n/**\n * Get condition filtered by conditionType\n * @param {Array} conditions\n * @param {String} conditionType - period, simple, null\n * @returns {*}\n */\nfunction getConditionsByType(conditions, conditionType) {\n  return conditions.filter(function loop(condition) {\n    return condition.type === conditionType;\n  });\n}\n\nmodule.exports = {\n  getPeriodConditionsAsCss: getPeriodConditionsAsCss,\n  getSimpleConditionsAsCss: getSimpleConditionsAsCss,\n  getNullConditionAsCss: getNullConditionAsCss,\n  getConditionsByType: getConditionsByType,\n  getColorsFromLegend: getColorsFromLegend\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/home/map/style.js\n ** module id = 48\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/home/map/style.js?");

/***/ },

/***/ 49:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function($) {__webpack_require__(50);\n__webpack_require__(45);\n__webpack_require__(51);\n// Search form\n__webpack_require__(52);\n\n/* eslint-disable */\nvar config = __webpack_require__(45);\nvar sublayer = __webpack_require__(44);\nvar legend = __webpack_require__(53);\nvar legendRange = __webpack_require__(54);\nvar tooltip = __webpack_require__(47);\n/* eslint-enable */\n\n// Create the leaflet map\nconfig.map = L.map('map', {\n  zoomControl: true,\n  center: [window.gw.map.centerLatitude, window.gw.map.centerLongitude],\n  zoom: window.gw.map.zoom\n});\n\nL.tileLayer('http://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png', {\n  attribution: 'GovWiki'\n}).addTo(config.map);\n\ncartodb.createLayer(config.map, {\n  user_name: window.gw.map.username,\n  type: 'cartodb',\n  sublayers: []\n})\n  .addTo(config.map)\n  .done(function mapLoaded(baseLayer) {\n    var sql;\n    var select;\n    var where;\n\n    var $map = $('#map');\n    var $loader = $('#map_wrap').find('.loader');\n\n    baseLayer.on('load', function load() {\n      $loader.hide();\n      $map.show();\n      $map.css({ opacity: 1 });\n    });\n\n    config.baseLayer = baseLayer;\n\n    /**\n     * Create new SQL request\n     */\n    sql = new cartodb.SQL({ user: window.gw.map.username });\n\n    /**\n     * SubLayers & tooltips initialization\n     * Get unique altTypes and render new subLayers by them\n     */\n    select = 'SELECT GeometryType(the_geom), alt_type_slug FROM ' + window.gw.environment;\n    where = 'WHERE the_geom IS NOT NULL GROUP BY GeometryType(the_geom), alt_type_slug ORDER BY alt_type_slug';\n    sql.execute(select + ' ' + where)\n      .done(function sqlLoaded(data) {\n        config.layersData = data;\n        init(data);\n      })\n      .error(function error(errors) {\n        return cartodbError(errors);\n      });\n  });\nfunction cartodbError() {\n  var $mapProcessing = $('.mapOnProcessing');\n  $mapProcessing\n    .find('h5').eq(0)\n    .text('Something went wrong, please contact with us (contact@californiapolicycenter.org) ');\n  $mapProcessing.css({ opacity: 1 });\n  $mapProcessing.show();\n}\n/**\n * Init\n */\nfunction init(data) {\n  var isAltTypeLegendUsed;\n  var altTypes = data.rows.filter(function loop(alt) {\n    return !!alt.alt_type_slug;\n  });\n\n  sublayer.initSubLayers(altTypes);\n  tooltip.initTooltips();\n\n  isAltTypeLegendUsed = false;\n\n  if (findLegendType('altTypes')) {\n    legend.init(altTypes);\n    isAltTypeLegendUsed = true;\n  }\n  if (findLegendType('range')) {\n    legendRange.init(!isAltTypeLegendUsed);\n  }\n\n  function findLegendType(legendType) {\n    return _.forOwn(window.gw.map.legendTypes, function loop(legendName) {\n      return legendName === legendType;\n    })[0];\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/home/map/main.js\n ** module id = 49\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/home/map/main.js?");

/***/ },

/***/ 50:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/*!\n * Bootstrap v3.3.6 (http://getbootstrap.com)\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under the MIT license\n */\nif(\"undefined\"==typeof jQuery)throw new Error(\"Bootstrap's JavaScript requires jQuery\");+function(a){\"use strict\";var b=a.fn.jquery.split(\" \")[0].split(\".\");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1||b[0]>2)throw new Error(\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3\")}(jQuery),+function(a){\"use strict\";function b(){var a=document.createElement(\"bootstrap\"),b={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(\"bsTransitionEnd\",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var c=a(this),e=c.data(\"bs.alert\");e||c.data(\"bs.alert\",e=new d(this)),\"string\"==typeof b&&e[b].call(c)})}var c='[data-dismiss=\"alert\"]',d=function(b){a(b).on(\"click\",c,this.close)};d.VERSION=\"3.3.6\",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger(\"closed.bs.alert\").remove()}var e=a(this),f=e.attr(\"data-target\");f||(f=e.attr(\"href\"),f=f&&f.replace(/.*(?=#[^\\s]*$)/,\"\"));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(\".alert\")),g.trigger(b=a.Event(\"close.bs.alert\")),b.isDefaultPrevented()||(g.removeClass(\"in\"),a.support.transition&&g.hasClass(\"fade\")?g.one(\"bsTransitionEnd\",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on(\"click.bs.alert.data-api\",c,d.prototype.close)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.button\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.button\",e=new c(this,f)),\"toggle\"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION=\"3.3.6\",c.DEFAULTS={loadingText:\"loading...\"},c.prototype.setState=function(b){var c=\"disabled\",d=this.$element,e=d.is(\"input\")?\"val\":\"html\",f=d.data();b+=\"Text\",null==f.resetText&&d.data(\"resetText\",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),\"loadingText\"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle=\"buttons\"]');if(b.length){var c=this.$element.find(\"input\");\"radio\"==c.prop(\"type\")?(c.prop(\"checked\")&&(a=!1),b.find(\".active\").removeClass(\"active\"),this.$element.addClass(\"active\")):\"checkbox\"==c.prop(\"type\")&&(c.prop(\"checked\")!==this.$element.hasClass(\"active\")&&(a=!1),this.$element.toggleClass(\"active\")),c.prop(\"checked\",this.$element.hasClass(\"active\")),a&&c.trigger(\"change\")}else this.$element.attr(\"aria-pressed\",!this.$element.hasClass(\"active\")),this.$element.toggleClass(\"active\")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on(\"click.bs.button.data-api\",'[data-toggle^=\"button\"]',function(c){var d=a(c.target);d.hasClass(\"btn\")||(d=d.closest(\".btn\")),b.call(d,\"toggle\"),a(c.target).is('input[type=\"radio\"]')||a(c.target).is('input[type=\"checkbox\"]')||c.preventDefault()}).on(\"focus.bs.button.data-api blur.bs.button.data-api\",'[data-toggle^=\"button\"]',function(b){a(b.target).closest(\".btn\").toggleClass(\"focus\",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.carousel\"),f=a.extend({},c.DEFAULTS,d.data(),\"object\"==typeof b&&b),g=\"string\"==typeof b?b:f.slide;e||d.data(\"bs.carousel\",e=new c(this,f)),\"number\"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\".carousel-indicators\"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on(\"keydown.bs.carousel\",a.proxy(this.keydown,this)),\"hover\"==this.options.pause&&!(\"ontouchstart\"in document.documentElement)&&this.$element.on(\"mouseenter.bs.carousel\",a.proxy(this.pause,this)).on(\"mouseleave.bs.carousel\",a.proxy(this.cycle,this))};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:\"hover\",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(\".item\"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d=\"prev\"==a&&0===c||\"next\"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e=\"prev\"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(\".item.active\"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one(\"slid.bs.carousel\",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?\"next\":\"prev\",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\".next, .prev\").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide(\"next\")},c.prototype.prev=function(){return this.sliding?void 0:this.slide(\"prev\")},c.prototype.slide=function(b,d){var e=this.$element.find(\".item.active\"),f=d||this.getItemForDirection(b,e),g=this.interval,h=\"next\"==b?\"left\":\"right\",i=this;if(f.hasClass(\"active\"))return this.sliding=!1;var j=f[0],k=a.Event(\"slide.bs.carousel\",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(\".active\").removeClass(\"active\");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass(\"active\")}var m=a.Event(\"slid.bs.carousel\",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass(\"slide\")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one(\"bsTransitionEnd\",function(){f.removeClass([b,h].join(\" \")).addClass(\"active\"),e.removeClass([\"active\",h].join(\" \")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass(\"active\"),f.addClass(\"active\"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr(\"data-target\")||(d=e.attr(\"href\"))&&d.replace(/.*(?=#[^\\s]+$)/,\"\"));if(f.hasClass(\"carousel\")){var g=a.extend({},f.data(),e.data()),h=e.attr(\"data-slide-to\");h&&(g.interval=!1),b.call(f,g),h&&f.data(\"bs.carousel\").to(h),c.preventDefault()}};a(document).on(\"click.bs.carousel.data-api\",\"[data-slide]\",e).on(\"click.bs.carousel.data-api\",\"[data-slide-to]\",e),a(window).on(\"load\",function(){a('[data-ride=\"carousel\"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){\"use strict\";function b(b){var c,d=b.attr(\"data-target\")||(c=b.attr(\"href\"))&&c.replace(/.*(?=#[^\\s]+$)/,\"\");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data(\"bs.collapse\"),f=a.extend({},d.DEFAULTS,c.data(),\"object\"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data(\"bs.collapse\",e=new d(this,f)),\"string\"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle=\"collapse\"][href=\"#'+b.id+'\"],[data-toggle=\"collapse\"][data-target=\"#'+b.id+'\"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION=\"3.3.6\",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass(\"width\");return a?\"width\":\"height\"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\"in\")){var b,e=this.$parent&&this.$parent.children(\".panel\").children(\".in, .collapsing\");if(!(e&&e.length&&(b=e.data(\"bs.collapse\"),b&&b.transitioning))){var f=a.Event(\"show.bs.collapse\");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,\"hide\"),b||e.data(\"bs.collapse\",null));var g=this.dimension();this.$element.removeClass(\"collapse\").addClass(\"collapsing\")[g](0).attr(\"aria-expanded\",!0),this.$trigger.removeClass(\"collapsed\").attr(\"aria-expanded\",!0),this.transitioning=1;var h=function(){this.$element.removeClass(\"collapsing\").addClass(\"collapse in\")[g](\"\"),this.transitioning=0,this.$element.trigger(\"shown.bs.collapse\")};if(!a.support.transition)return h.call(this);var i=a.camelCase([\"scroll\",g].join(\"-\"));this.$element.one(\"bsTransitionEnd\",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\"in\")){var b=a.Event(\"hide.bs.collapse\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\"collapsing\").removeClass(\"collapse in\").attr(\"aria-expanded\",!1),this.$trigger.addClass(\"collapsed\").attr(\"aria-expanded\",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass(\"collapsing\").addClass(\"collapse\").trigger(\"hidden.bs.collapse\")};return a.support.transition?void this.$element[c](0).one(\"bsTransitionEnd\",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass(\"in\")?\"hide\":\"show\"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"'+this.options.parent+'\"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass(\"in\");a.attr(\"aria-expanded\",c),b.toggleClass(\"collapsed\",!c).attr(\"aria-expanded\",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on(\"click.bs.collapse.data-api\",'[data-toggle=\"collapse\"]',function(d){var e=a(this);e.attr(\"data-target\")||d.preventDefault();var f=b(e),g=f.data(\"bs.collapse\"),h=g?\"toggle\":e.data();c.call(f,h)})}(jQuery),+function(a){\"use strict\";function b(b){var c=b.attr(\"data-target\");c||(c=b.attr(\"href\"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\\s]*$)/,\"\"));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass(\"open\")&&(c&&\"click\"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event(\"hide.bs.dropdown\",f)),c.isDefaultPrevented()||(d.attr(\"aria-expanded\",\"false\"),e.removeClass(\"open\").trigger(a.Event(\"hidden.bs.dropdown\",f)))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data(\"bs.dropdown\");d||c.data(\"bs.dropdown\",d=new g(this)),\"string\"==typeof b&&d[b].call(c)})}var e=\".dropdown-backdrop\",f='[data-toggle=\"dropdown\"]',g=function(b){a(b).on(\"click.bs.dropdown\",this.toggle)};g.VERSION=\"3.3.6\",g.prototype.toggle=function(d){var e=a(this);if(!e.is(\".disabled, :disabled\")){var f=b(e),g=f.hasClass(\"open\");if(c(),!g){\"ontouchstart\"in document.documentElement&&!f.closest(\".navbar-nav\").length&&a(document.createElement(\"div\")).addClass(\"dropdown-backdrop\").insertAfter(a(this)).on(\"click\",c);var h={relatedTarget:this};if(f.trigger(d=a.Event(\"show.bs.dropdown\",h)),d.isDefaultPrevented())return;e.trigger(\"focus\").attr(\"aria-expanded\",\"true\"),f.toggleClass(\"open\").trigger(a.Event(\"shown.bs.dropdown\",h))}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(\".disabled, :disabled\")){var e=b(d),g=e.hasClass(\"open\");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger(\"focus\"),d.trigger(\"click\");var h=\" li:not(.disabled):visible a\",i=e.find(\".dropdown-menu\"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger(\"focus\")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on(\"click.bs.dropdown.data-api\",c).on(\"click.bs.dropdown.data-api\",\".dropdown form\",function(a){a.stopPropagation()}).on(\"click.bs.dropdown.data-api\",f,g.prototype.toggle).on(\"keydown.bs.dropdown.data-api\",f,g.prototype.keydown).on(\"keydown.bs.dropdown.data-api\",\".dropdown-menu\",g.prototype.keydown)}(jQuery),+function(a){\"use strict\";function b(b,d){return this.each(function(){var e=a(this),f=e.data(\"bs.modal\"),g=a.extend({},c.DEFAULTS,e.data(),\"object\"==typeof b&&b);f||e.data(\"bs.modal\",f=new c(this,g)),\"string\"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(\".modal-dialog\"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(\".modal-content\").load(this.options.remote,a.proxy(function(){this.$element.trigger(\"loaded.bs.modal\")},this))};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event(\"show.bs.modal\",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass(\"modal-open\"),this.escape(),this.resize(),this.$element.on(\"click.dismiss.bs.modal\",'[data-dismiss=\"modal\"]',a.proxy(this.hide,this)),this.$dialog.on(\"mousedown.dismiss.bs.modal\",function(){d.$element.one(\"mouseup.dismiss.bs.modal\",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass(\"fade\");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass(\"in\"),d.enforceFocus();var f=a.Event(\"shown.bs.modal\",{relatedTarget:b});e?d.$dialog.one(\"bsTransitionEnd\",function(){d.$element.trigger(\"focus\").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger(\"focus\").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\"hide.bs.modal\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off(\"focusin.bs.modal\"),this.$element.removeClass(\"in\").off(\"click.dismiss.bs.modal\").off(\"mouseup.dismiss.bs.modal\"),this.$dialog.off(\"mousedown.dismiss.bs.modal\"),a.support.transition&&this.$element.hasClass(\"fade\")?this.$element.one(\"bsTransitionEnd\",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger(\"focus\")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\"keydown.dismiss.bs.modal\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\"keydown.dismiss.bs.modal\")},c.prototype.resize=function(){this.isShown?a(window).on(\"resize.bs.modal\",a.proxy(this.handleUpdate,this)):a(window).off(\"resize.bs.modal\")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass(\"modal-open\"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger(\"hidden.bs.modal\")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass(\"fade\")?\"fade\":\"\";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement(\"div\")).addClass(\"modal-backdrop \"+e).appendTo(this.$body),this.$element.on(\"click.dismiss.bs.modal\",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&(\"static\"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\"in\"),!b)return;f?this.$backdrop.one(\"bsTransitionEnd\",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass(\"in\");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass(\"fade\")?this.$backdrop.one(\"bsTransitionEnd\",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:\"\",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:\"\"})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:\"\",paddingRight:\"\"})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css(\"padding-right\")||0,10);this.originalBodyPad=document.body.style.paddingRight||\"\",this.bodyIsOverflowing&&this.$body.css(\"padding-right\",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css(\"padding-right\",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement(\"div\");a.className=\"modal-scrollbar-measure\",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on(\"click.bs.modal.data-api\",'[data-toggle=\"modal\"]',function(c){var d=a(this),e=d.attr(\"href\"),f=a(d.attr(\"data-target\")||e&&e.replace(/.*(?=#[^\\s]+$)/,\"\")),g=f.data(\"bs.modal\")?\"toggle\":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is(\"a\")&&c.preventDefault(),f.one(\"show.bs.modal\",function(a){a.isDefaultPrevented()||f.one(\"hidden.bs.modal\",function(){d.is(\":visible\")&&d.trigger(\"focus\")})}),b.call(f,g,this)})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tooltip\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.tooltip\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init(\"tooltip\",a,b)};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:\"top\",selector:!1,template:'<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',trigger:\"hover focus\",title:\"\",delay:0,html:!1,container:!1,viewport:{selector:\"body\",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error(\"`selector` option must be specified when initializing \"+this.type+\" on the window.document object!\");for(var e=this.options.trigger.split(\" \"),f=e.length;f--;){var g=e[f];if(\"click\"==g)this.$element.on(\"click.\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\"manual\"!=g){var h=\"hover\"==g?\"mouseenter\":\"focusin\",i=\"hover\"==g?\"mouseleave\":\"focusout\";this.$element.on(h+\".\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\".\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\"manual\",selector:\"\"}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\"number\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusin\"==b.type?\"focus\":\"hover\"]=!0),c.tip().hasClass(\"in\")||\"in\"==c.hoverState?void(c.hoverState=\"in\"):(clearTimeout(c.timeout),c.hoverState=\"in\",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){\"in\"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusout\"==b.type?\"focus\":\"hover\"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState=\"out\",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){\"out\"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event(\"show.bs.\"+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr(\"id\",g),this.$element.attr(\"aria-describedby\",g),this.options.animation&&f.addClass(\"fade\");var h=\"function\"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\\s?auto?\\s?/i,j=i.test(h);j&&(h=h.replace(i,\"\")||\"top\"),f.detach().css({top:0,left:0,display:\"block\"}).addClass(h).data(\"bs.\"+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger(\"inserted.bs.\"+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h=\"bottom\"==h&&k.bottom+m>o.bottom?\"top\":\"top\"==h&&k.top-m<o.top?\"bottom\":\"right\"==h&&k.right+l>o.width?\"left\":\"left\"==h&&k.left-l<o.left?\"right\":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger(\"shown.bs.\"+e.type),e.hoverState=null,\"out\"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\"margin-top\"),10),h=parseInt(d.css(\"margin-left\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass(\"in\");var i=d[0].offsetWidth,j=d[0].offsetHeight;\"top\"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?\"offsetWidth\":\"offsetHeight\";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?\"left\":\"top\",50*(1-a/b)+\"%\").css(c?\"top\":\"left\",\"\")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\".tooltip-inner\")[this.options.html?\"html\":\"text\"](b),a.removeClass(\"fade in top bottom left right\")},c.prototype.hide=function(b){function d(){\"in\"!=e.hoverState&&f.detach(),e.$element.removeAttr(\"aria-describedby\").trigger(\"hidden.bs.\"+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event(\"hide.bs.\"+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass(\"in\"),a.support.transition&&f.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr(\"title\")||\"string\"!=typeof a.attr(\"data-original-title\"))&&a.attr(\"data-original-title\",a.attr(\"title\")||\"\").attr(\"title\",\"\")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d=\"BODY\"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return\"bottom\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\"top\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\"left\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\"data-original-title\")||(\"function\"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+\" `template` option must consist of exactly 1 top-level element!\");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".tooltip-arrow\")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data(\"bs.\"+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass(\"in\")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off(\".\"+a.type).removeData(\"bs.\"+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.popover\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.popover\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.init(\"popover\",a,b)};if(!a.fn.tooltip)throw new Error(\"Popover requires tooltip.js\");c.VERSION=\"3.3.6\",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\"right\",trigger:\"click\",content:\"\",template:'<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\".popover-title\")[this.options.html?\"html\":\"text\"](b),a.find(\".popover-content\").children().detach().end()[this.options.html?\"string\"==typeof c?\"html\":\"append\":\"text\"](c),a.removeClass(\"fade top bottom left right in\"),a.find(\".popover-title\").html()||a.find(\".popover-title\").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\"data-content\")||(\"function\"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".arrow\")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){\"use strict\";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||\"\")+\" .nav li > a\",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(\"scroll.bs.scrollspy\",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data(\"bs.scrollspy\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.scrollspy\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})}b.VERSION=\"3.3.6\",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c=\"offset\",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c=\"position\",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data(\"target\")||b.attr(\"href\"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(\":visible\")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target=\"'+b+'\"],'+this.selector+'[href=\"'+b+'\"]',d=a(c).parents(\"li\").addClass(\"active\");\n    d.parent(\".dropdown-menu\").length&&(d=d.closest(\"li.dropdown\").addClass(\"active\")),d.trigger(\"activate.bs.scrollspy\")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,\".active\").removeClass(\"active\")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on(\"load.bs.scrollspy.data-api\",function(){a('[data-spy=\"scroll\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tab\");e||d.data(\"bs.tab\",e=new c(this)),\"string\"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest(\"ul:not(.dropdown-menu)\"),d=b.data(\"target\");if(d||(d=b.attr(\"href\"),d=d&&d.replace(/.*(?=#[^\\s]*$)/,\"\")),!b.parent(\"li\").hasClass(\"active\")){var e=c.find(\".active:last a\"),f=a.Event(\"hide.bs.tab\",{relatedTarget:b[0]}),g=a.Event(\"show.bs.tab\",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest(\"li\"),c),this.activate(h,h.parent(),function(){e.trigger({type:\"hidden.bs.tab\",relatedTarget:b[0]}),b.trigger({type:\"shown.bs.tab\",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass(\"active\").find(\"> .dropdown-menu > .active\").removeClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!1),b.addClass(\"active\").find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),h?(b[0].offsetWidth,b.addClass(\"in\")):b.removeClass(\"fade\"),b.parent(\".dropdown-menu\").length&&b.closest(\"li.dropdown\").addClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),e&&e()}var g=d.find(\"> .active\"),h=e&&a.support.transition&&(g.length&&g.hasClass(\"fade\")||!!d.find(\"> .fade\").length);g.length&&h?g.one(\"bsTransitionEnd\",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass(\"in\")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),\"show\")};a(document).on(\"click.bs.tab.data-api\",'[data-toggle=\"tab\"]',e).on(\"click.bs.tab.data-api\",'[data-toggle=\"pill\"]',e)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.affix\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.affix\",e=new c(this,f)),\"string\"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on(\"scroll.bs.affix.data-api\",a.proxy(this.checkPosition,this)).on(\"click.bs.affix.data-api\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION=\"3.3.6\",c.RESET=\"affix affix-top affix-bottom\",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&\"top\"==this.affixed)return c>e?\"top\":!1;if(\"bottom\"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:\"bottom\":a-d>=e+g?!1:\"bottom\";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?\"top\":null!=d&&i+j>=a-d?\"bottom\":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\"affix\");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(\":visible\")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());\"object\"!=typeof d&&(f=e=d),\"function\"==typeof e&&(e=d.top(this.$element)),\"function\"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css(\"top\",\"\");var i=\"affix\"+(h?\"-\"+h:\"\"),j=a.Event(i+\".bs.affix\");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin=\"bottom\"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\"affix\",\"affixed\")+\".bs.affix\")}\"bottom\"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on(\"load\",function(){a('[data-spy=\"affix\"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/vendor/bootstrap.js\n ** module id = 50\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/vendor/bootstrap.js?");

/***/ },

/***/ 51:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function($) {var origRender;\n/**\n * Extend CartoDB Tooltip\n * Get Layer position\n *\n * @returns {number} Layer Position\n */\ncdb.geo.ui.Tooltip.prototype.getLayerIndex = function getLayerIndex() {\n  return this.options.layer._position;\n};\n/**\n * Extend CartoDB Tooltip\n * Set data mask for formating 'data' field before displaying.\n *\n * @param {string} mask\n *\n * @returns {cdb.geo.ui.Tooltip}\n */\ncdb.geo.ui.Tooltip.prototype.setMask = function setMask(mask) {\n  this.options.gw = {\n    mask: mask\n  };\n  return this;\n};\n/**\n * Override carto db tooltip render method in order to format data before\n * displaying.\n * @author Shemin Dmitry\n */\norigRender = cdb.geo.ui.Tooltip.prototype.render;\ncdb.geo.ui.Tooltip.prototype.render = function render(data) {\n  var tmp = $.extend({}, data);\n  if (tmp.data !== null && tmp.data !== undefined && this.options.gw.mask) {\n    tmp.dataFormatted = numeral(tmp.data).format(this.options.gw.mask);\n  }\n  return origRender.call(this, tmp);\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/home/map/cartodb_util.js\n ** module id = 51\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/home/map/cartodb_util.js?");

/***/ },

/***/ 52:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function($) {var Handlebars = __webpack_require__(26);\nvar searchValue;\nvar $typeahead;\n\n/**\n * Typeahead search\n */\nvar findMatches = function findMatches(query, syncCallback, asyncCallback) {\n    $.ajax({\n        method: 'GET',\n        url: window.gw.urls.search + '?search=' + query\n    }).success(function success(data) {\n        console.log(data);\n        asyncCallback(data);\n    });\n};\n\nHandlebars.registerHelper('if_eq', function ifEq(a, b, opts) {\n    if (a === b) {\n        return opts.fn(this);\n    }\n\n    return opts.inverse(this);\n});\nsearchValue = '';\n\n// Init typeahead\n$typeahead = $('.typeahead_custom').typeahead({\n  hint: true,\n  highlight: true,\n  minLength: 3\n}, {\n  name: 'elected_officials',\n  source: findMatches,\n  templates: {\n    empty: '<div class=\"tt-suggestion\">Not found. Please retype your query </div>',\n    suggestion: Handlebars.compile(searchResultTemplate())\n  },\n  updater: function updater(item) {\n    alert(item);\n  }\n});\n\n// Pressed mouse or enter button\n$typeahead.bind('typeahead:selected', function selected(obj, selectedItemData) {\n  var name;\n  var location;\n\n  if (selectedItemData.type === 'government') {\n      // Selected item is government.\n      name = selectedItemData.name;\n      location = [\n          selectedItemData.altTypeSlug,\n          selectedItemData.slug\n      ].join('/');\n  } else {\n      // Selected item is electedOfficials.\n      name = selectedItemData.fullName;\n      location = [\n          selectedItemData.government.altTypeSlug,\n          selectedItemData.government.slug,\n          selectedItemData.slug\n      ].join('/');\n  }\n\n  $typeahead.typeahead('val', name);\n  window.location.pathname += location;\n});\n\n// Move cursor via arrows keys\n$typeahead.bind('typeahead:cursorchange', function cursorchange() {\n  $typeahead.typeahead('val', searchValue);\n});\n\n// Store search value on typing\n$typeahead.keyup(function keyup(event) {\n  searchValue = $(event.target).val();\n});\n\n$typeahead.attr('disabled', false);\n\n/**\n * Generate and return handlebars template.\n * @return {string}\n */\nfunction searchResultTemplate() {\n    var template = '<div class=\"sugg-box\">';\n\n    template += \"{{#if_eq type 'government'}}\";\n    template += '<div class=\"sugg-state\">{{state}}</div>';\n    template += '<div class=\"sugg-name\">{{name}}</div>';\n    template += '{{else}}';\n    template += '<div class=\"sugg-name\">{{fullName}}</div>';\n    template += '<div class=\"sugg-govname\">{{government.name}}</div>';\n    template += '{{/if_eq}}';\n    template += '</div>';\n\n    return template;\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/home/search_custom.js\n ** module id = 52\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/home/search_custom.js?");

/***/ },

/***/ 53:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function($) {var config = __webpack_require__(45);\n/**\n * TODO: Replace when legend will be ready\n * Init legend (NEW)\n */\nfunction init() {\n  // TODO generate legend on fly from given altTypes\n  var $legendContainer = $('#menu');\n  // Add new elements.\n  var compiledLegendItems = '';\n  config.legend.forEach(function loop(menuItem) {\n    var _altTypeSlug;\n    var iconCounty = '';\n    var iconMarker = '';\n    var fillColor = '';\n    var strokeColor = '';\n    _altTypeSlug = menuItem.altType.toLowerCase();\n    // Colorize markers & counties by range number\n    if (window.gw.map.coloringConditions.colorized) {\n      // If url to shape exist - show marker\n      if (menuItem.shape) {\n        fillColor = 'fillColor=\"white\" ';\n        strokeColor = 'strokeColor=\"' + menuItem.color + '\" ';\n        iconMarker = '<img src=\"' + menuItem.shape + '\" class=\"svg\" ' + strokeColor + fillColor + '/>';\n        // Else - show county line\n      } else {\n        iconCounty = '<i class=\"grey-line\"></i>';\n      }\n      // Use default styles (hardcoded in this file)\n    } else {\n      // If url to shape exist - show marker\n      if (menuItem.shape) {\n        fillColor = 'fillColor=\"' + menuItem.color + '\" ';\n        strokeColor = 'strokeColor=\"' + menuItem.color + '\" ';\n        iconMarker = '<img src=\"' + menuItem.shape + '\" class=\"svg\" ' + strokeColor + fillColor + '/>';\n        // Else - show county line\n      } else {\n        iconCounty = '<i class=\"grey-line\"></i>';\n      }\n    }\n    compiledLegendItems += '<li id=' + _altTypeSlug + ' class=\"' + _altTypeSlug + ' legend-item selected\">' +\n      '<span class=\"glyphicon glyphicon-ok\"></span>' +\n      iconCounty + iconMarker +\n      '<a href=\"javascript:void(0)\">' + menuItem.title + '</a>' +\n      '</li>';\n  });\n  $legendContainer.append(compiledLegendItems).css({ opacity: 1 });\n  replaceImgToSvg();\n  $legendContainer.on('click', '.legend-item', function legendItemClick() {\n    var countyName;\n    $(this).toggleClass('selected');\n    countyName = $(this).attr('id');\n    config.subLayers[countyName].toggle();\n  });\n}\n/**\n * Replace all SVG images with inline SVG\n */\nfunction replaceImgToSvg() {\n  $('img.svg').each(function loop() {\n    var $img = $(this);\n    var imgID = $img.attr('id');\n    var imgClass = $img.attr('class');\n    var imgURL = $img.attr('src');\n    var fillColor = $img.attr('fillColor');\n    var strokeColor = $img.attr('strokeColor');\n    $.get(imgURL, function load(data) {\n      // Get the SVG tag, ignore the rest\n      var $svg = $(data).find('svg');\n      var $rect = $svg.find('rect');\n      var $path = $svg.find('path');\n      if ($rect[0] !== undefined) {\n        $rect.css({ fill: fillColor, stroke: strokeColor });\n      }\n      if ($path[0] !== undefined) {\n        $path.css({ fill: fillColor, stroke: strokeColor });\n      }\n      // Add replaced image's ID to the new SVG\n      if (typeof imgID !== undefined) {\n        $svg = $svg.attr('id', imgID);\n      }\n      // Add replaced image's classes to the new SVG\n      if (typeof imgClass !== undefined) {\n        $svg = $svg.attr('class', imgClass + ' replaced-svg');\n      }\n      // Remove any invalid XML tags as per http://validator.w3.org\n      $svg = $svg.removeAttr('xmlns:a');\n      // Replace image with new SVG\n      $img.replaceWith($svg);\n    }, 'xml');\n  });\n}\nmodule.exports = {\n  init: init\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/home/map/legend.js\n ** module id = 53\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/home/map/legend.js?");

/***/ },

/***/ 54:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function($) {var glob = __webpack_require__(46);\nvar config = __webpack_require__(45);\nvar sublayer = __webpack_require__(44);\nvar Style = __webpack_require__(48);\nvar methods;\n\nfunction init(showOnTop) {\n  var $legend;\n  var legendClass = 'cartodb-legend-stack';\n  var conditionColor;\n  var conditionText;\n  var legendItems = '';\n\n  var fieldName = window.gw.map.coloringConditions.localized_name;\n  var conditions = window.gw.map.coloringConditions.conditions;\n\n  var periodConditions;\n  var simpleConditions;\n  var nullCondition;\n\n  if (!window.gw.map.coloringConditions.colorized) {\n    return false;\n  }\n\n  // var fieldName = window.gw.map.coloringConditions.fieldName.replace(/_/g, ' ');\n  periodConditions = Style.getConditionsByType(conditions, 'period');\n  simpleConditions = Style.getConditionsByType(conditions, 'simple');\n  nullCondition = Style.getConditionsByType(conditions, 'null');\n\n  // Build legend items for period conditions\n  if (periodConditions.length !== 0) {\n    periodConditions.forEach(function loop(condition) {\n      conditionColor = 'background: ' + condition.color;\n      conditionText = condition.min + ' - ' + condition.max;\n      legendItems += '<li data-condition=\"' + JSON.stringify(condition).replace(/\"/g, '&quot;') +\n        '\"><div class=\"bullet\" style=\"' + conditionColor + '\"></div>' +\n        conditionText +\n        '</li>';\n    });\n  }\n\n  // Build legend items for simple conditions\n  if (simpleConditions.length !== 0) {\n    simpleConditions.forEach(function loop(condition) {\n      conditionColor = 'background: ' + condition.color;\n      conditionText = condition.operation + ' ' + condition.value;\n      legendItems += '<li data-condition=\"' + JSON.stringify(condition).replace(/\"/g, '&quot;') +\n        '\"><div class=\"bullet\" style=\"' + conditionColor + '\"></div>' +\n        conditionText +\n        '</li>';\n    });\n  }\n\n  // Build legend items for null conditions\n  if (nullCondition.length !== 0) {\n    conditionColor = 'background: ' + nullCondition[0].color;\n    legendItems += '<li data-condition=\"' + JSON.stringify(nullCondition[0]).replace(/\"/g, '&quot;') +\n      '\"><div class=\"bullet\" style=\"' + conditionColor + '\"></div>null</li>';\n  }\n\n  if (showOnTop) {\n    legendClass += ' cartodb-legend-stack__top';\n  }\n  $legend = $('<div class=\"' + legendClass + '\" style=\"\">' +\n    '<div class=\"cartodb-legend custom horizontal\"' +\n    ' style=\"display: block;\"><div class=\"legend-title\">' +\n    fieldName +\n    '</div><ul>' +\n    legendItems +\n    '</ul></div></div>');\n  $('#menu').after($legend);\n\n  handlerToggleConditions($legend);\n  return true;\n}\n\n/**\n * Click on range legend item, to disable layers\n * @param $container\n */\nfunction handlerToggleConditions($container) {\n  // Each clicked element contain conditionData in attribute 'data-condition'\n  // It simple stringifyed object, for example: JSON.stringify(window.gw.map.coloringConditions.conditions[0])\n  // <li data-condition='{\"type\":\"simple\",\"color\":\"#80ff00\",\"value\":\"1\",\"operation\":\"<=\"}'>\n  var conditionData;\n  var activeConditions = [];\n  var disabledConditions;\n  var completeConditions = [];\n\n  $container.on('click', 'li', function legendItemClick() {\n    var $el = $(this);\n    var isActive = $el.hasClass('active');\n\n    completeConditions = [];\n    conditionData = JSON.parse($(this).attr('data-condition'));\n\n    // Toggle range button\n    if (isActive) {\n      removeActiveCondition(activeConditions, conditionData);\n    } else {\n      addActiveCondition(activeConditions, conditionData);\n    }\n\n    if (activeConditions.length > 0) {\n      disabledConditions = findDisabledConditions(activeConditions, config.defaultConditions);\n      addActiveConditions(completeConditions, activeConditions);\n      addDisabledConditions(completeConditions, disabledConditions);\n    } else {\n      completeConditions = config.defaultConditions;\n    }\n\n    console.group();\n    console.log('Clicked element data: ', conditionData);\n    console.log('Active conditions: ', activeConditions);\n    console.log('Disabled conditions: ', disabledConditions);\n    console.log('Complete conditions: ', completeConditions);\n    console.groupEnd();\n\n    sublayer.removeAllSubLayers();\n    sublayer.reInit({ conditions: completeConditions });\n\n    $el.toggleClass('active');\n  });\n}\n\n/**\n * @param activeConditions\n * @param conditionData\n */\nfunction removeActiveCondition(activeConditions, conditionData) {\n  var index = findCondition(activeConditions, conditionData);\n  if (index !== -1) {\n    activeConditions.splice(index, 1);\n  }\n  return index;\n}\n\n/**\n * @param activeConditions\n * @param conditionData\n */\nfunction addActiveCondition(activeConditions, conditionData) {\n  return activeConditions.push(conditionData);\n}\n\n/**\n * @param completeConditions\n * @param activeConditions\n */\nfunction addActiveConditions(completeConditions, activeConditions) {\n  activeConditions.forEach(function loop(activeCondition) {\n    completeConditions.push(activeCondition);\n  });\n}\n\n/**\n * @param completeConditions\n * @param disabledConditions\n */\nfunction addDisabledConditions(completeConditions, disabledConditions) {\n  _.forEach(disabledConditions, function loop(disabledCondition) {\n    var completeCondition = _.assign({}, disabledCondition);\n    completeCondition.color = '#dddddd';\n    completeConditions.push(completeCondition);\n  });\n}\n\n/**\n * @param activeConditions\n * @returns {*}\n */\nfunction findDisabledConditions(activeConditions, defaultConditions) {\n  return defaultConditions.filter(function loop(condition) {\n    // console.log(condition);\n    // console.log(findCondition(activeConditions, condition));\n    return findCondition(activeConditions, condition) === -1;\n  });\n}\n\n/**\n * Search one condition in conditions\n * @param conditions\n * @param oneCondition\n * @return {Number}\n */\nfunction findCondition(conditions, oneCondition) {\n  var findIndex = null;\n  if (!conditions) {\n    return -1;\n  }\n\n  if (conditions.length > 0) {\n    conditions.forEach(function loop(condition, index) {\n      if (oneCondition.type === 'simple' && oneCondition.type === condition.type) {\n        if (condition.operation === oneCondition.operation && condition.value === oneCondition.value) {\n          findIndex = index;\n        }\n      } else if (oneCondition.type === 'period' && oneCondition.type === condition.type) {\n        if (condition.min === oneCondition.min && condition.max === oneCondition.max) {\n          findIndex = index;\n        }\n      } else if (oneCondition.type === 'null' && oneCondition.type === condition.type) {\n        if (condition.color === oneCondition.color) {\n          findIndex = index;\n        }\n      }\n    });\n  }\n  return findIndex !== null ? findIndex : -1;\n}\n\nmethods = {\n  init: init\n};\n\nif (glob.isTest) {\n  methods = {\n    findDisabledConditions: findDisabledConditions,\n    addDisabledConditions: addDisabledConditions,\n    addActiveConditions: addActiveConditions,\n    addActiveCondition: addActiveCondition,\n    removeActiveCondition: removeActiveCondition\n  };\n}\n\nmodule.exports = methods;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/MobileBundle/Resources/public/js/home/map/legend_range.js\n ** module id = 54\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./src/GovWiki/MobileBundle/Resources/public/js/home/map/legend_range.js?");

/***/ }

});