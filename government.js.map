{"version":3,"sources":["webpack:///./src/GovWiki/FrontendBundle/Resources/public/js/government/index.js","webpack:///./src/GovWiki/FrontendBundle/Resources/public/js/government/graphs.js","webpack:///./src/GovWiki/FrontendBundle/Resources/public/js/government/graph/employee-compensation.js","webpack:///./src/GovWiki/FrontendBundle/Resources/public/js/government/graph/glob.js","webpack:///./src/GovWiki/FrontendBundle/Resources/public/js/government/graph/config.js","webpack:///./src/GovWiki/FrontendBundle/Resources/public/js/government/graph/financial-health.js","webpack:///./src/GovWiki/FrontendBundle/Resources/public/js/government/graph/financial-statement.js"],"names":[],"mappings":";;;;AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;ACrBD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA,sCAAqC,uDAAuD;;;;;;;AC1C5F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;AC7IA;;AAEA;AACA;AACA,G;;;;;;ACJA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,G;;;;;;ACnCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;ACtIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAA+C,aAAa,cAAc;AAC1E,yCAAwC;AACxC;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAA+C,aAAa,cAAc;AAC1E,yCAAwC;AACxC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAkC,gBAAgB,IAAI;;AAEtD;AACA;AACA;;AAEA,cAAa;AACb;;AAEA,cAAa;AACb;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;;AAEA;AACA;AACA;AACA,G","file":"government.js","sourcesContent":["$(function() {\n\n    require('./graphs.js');\n\n    var rankPopover = new RankPopover();\n\n    /**\n     * Change fin statement year.\n     */\n    $('#fin-stmt-year').change(function() {\n        var $this = $(this);\n        $this.closest('form').submit();\n        window.localStorage.setItem('tab', 'Financial_Statements');\n    });\n\n    var tab = window.localStorage.getItem('tab');\n    if (tab) {\n        window.localStorage.removeItem('tab');\n        $('.nav-pills a[href=\"#' + tab + '\"]').tab('show');\n    }\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/FrontendBundle/Resources/public/js/government/index.js\n ** module id = 0\n ** module chunks = 0\n **/","var employeeCompensationGraphs = require('./graph/employee-compensation');\nvar financialHealthGraphs = require('./graph/financial-health');\nvar financialStatementGraphs = require('./graph/financial-statement');\n\n/**\n * Initialization\n */\nfunction init() {\n    handler_onTabSwitch();\n}\n\n/**\n * (Handler)\n * On tab switch\n */\nfunction handler_onTabSwitch() {\n\n    $('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n\n        var tabname = $(e.target).attr('data-tabname');\n\n        /**\n         * Init graphs\n         */\n        switch (tabname) {\n            case 'Quality of Services':\n                break;\n            case 'Employee Compensation':\n                employeeCompensationGraphs.initAll();\n                break;\n            case 'Financial Health':\n                financialHealthGraphs.initAll();\n                break;\n            case 'Financial Financial_Statements':\n                financialStatementGraphs.initAll();\n                break;\n        }\n\n    });\n\n}\n\ngoogle.load('visualization', '1.0', {'packages': ['treemap', 'corechart'], 'callback': init});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/FrontendBundle/Resources/public/js/government/graphs.js\n ** module id = 1\n ** module chunks = 0\n **/","var data = require('./glob.js').data;\nvar chart = require('./config.js').chart;\n\n/**\n * Initialization\n */\nfunction init() {\n    employeeCompensation_one();\n    employeeCompensation_two();\n}\n\n/**\n * median-comp-graph\n */\nfunction employeeCompensation_one() {\n    /*\n     Ahtung! Hardcode detected!\n     todo replace such bad code\n     */\n    if (! data['median_salary_per_full_time_emp']) {\n        data['median_salary_per_full_time_emp'] = data['median_salary_for_full_time_employees'];\n    }\n    if (! data['median_benefits_per_ft_emp']) {\n        data['median_benefits_per_ft_emp'] = data['median_benefits_for_full_time_employees'];\n    }\n\n    if (data['median_wages_general_public'] == 0) {\n        data['median_wages_general_public'] = undefined;\n    }\n\n    if (data['median_benefits_general_public'] == 0) {\n        data['median_benefits_general_public'] = undefined;\n    }\n\n    if (!data['median_salary_per_full_time_emp'] || !data['median_benefits_per_ft_emp'] ||\n        !data['median_wages_general_public'] || !data['median_benefits_general_public']) {\n        return;\n    }\n\n    var chart, formatter, options, vis_data;\n    vis_data = new google.visualization.DataTable();\n    vis_data.addColumn('string', 'Median Compensation');\n    vis_data.addColumn('number', 'Wages');\n    vis_data.addColumn('number', 'Bens.');\n    vis_data.addRows([\n        [\n            toTitleCase(data.name + '\\n Employees'),\n            +data['median_salary_per_full_time_emp'],\n            +data['median_benefits_per_ft_emp']\n        ],\n        [\n            'All \\n' + toTitleCase(data.name + ' \\n Residents'),\n            +data['median_wages_general_public'],\n            +data['median_benefits_general_public']\n        ]\n    ]);\n    formatter = new google.visualization.NumberFormat({\n        groupingSymbol: ',',\n        fractionDigits: '0'\n    });\n    formatter.format(vis_data, 1);\n    formatter.format(vis_data, 2);\n    options = {\n        'title': 'Median Total Compensation - Full Time Workers: \\n Government vs. Private Sector',\n        'titleTextStyle': {\n            'fontSize': 12\n        },\n        'tooltip': {\n            'textStyle': {\n                'fontSize': 12\n            }\n        },\n        'width': 340,\n        'height': 300,\n        'isStacked': 'true',\n        'colors': ['#005ce6', '#009933']\n    };\n    chart = new google.visualization.ColumnChart(document.getElementById('median-comp-graph'));\n    chart.draw(vis_data, options);\n\n\n    function toTitleCase (str) {\n        return str.replace(/\\w\\S*/g, function(txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n    }\n\n}\n\n/**\n * median-pension-graph\n */\nfunction employeeCompensation_two() {\n    /*\n     Ahtung! Hardcode detected!\n     todo replace such bad code\n     */\n    if (! data['median_pension30_year_retiree']) {\n        data['median_pension30_year_retiree'] = data['median_pension_for_retiree_with_30_years_service'];\n    }\n\n    if (! data['median_pension30_year_retiree']) {\n        return;\n    }\n\n    var chart, formatter, options, vis_data;\n    vis_data = new google.visualization.DataTable();\n    vis_data.addColumn('string', 'Median Pension');\n    vis_data.addColumn('number', 'Wages');\n    vis_data.addRows([['Pension for \\n Retiree w/ 30 Years', +data['median_pension30_year_retiree']]]);\n    formatter = new google.visualization.NumberFormat({\n        groupingSymbol: ',',\n        fractionDigits: '0'\n    });\n    formatter.format(vis_data, 1);\n    options = {\n        'title': 'Median Total Pension',\n        'titleTextStyle': {\n            'fontSize': 12\n        },\n        'tooltip': {\n            'textStyle': {\n                'fontSize': 12\n            }\n        },\n        'width': 340,\n        'height': 300,\n        'bar': {\n            'groupWidth': '30%'\n        },\n        'isStacked': 'true',\n        'colors': ['#005ce6', '#009933']\n    };\n    chart = new google.visualization.ColumnChart(document.getElementById('median-pension-graph'));\n    chart.draw(vis_data, options);\n}\n\n\nmodule.exports = {\n    init: init,\n    initAll: init\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/FrontendBundle/Resources/public/js/government/graph/employee-compensation.js\n ** module id = 2\n ** module chunks = 0\n **/","var data = JSON.parse(window.gw.government);\n\nmodule.exports = {\n    data: data\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/FrontendBundle/Resources/public/js/government/graph/glob.js\n ** module id = 3\n ** module chunks = 0\n **/","var chart = {\n    employeeCompensation_one: {\n        init: false\n    },\n    employeeCompensation_two: {\n        init: false\n    },\n    financialHealth_one: {\n        init: false\n    },\n    financialHealth_two: {\n        init: false\n    },\n    financialHealth_three: {\n        init: false\n    },\n    financialStatements_one: {\n        init: false\n    },\n    financialStatements_two: {\n        init: false\n    },\n    financialStatementsTree: {\n        init: false\n    },\n    financialStatementsTree_expenditures: {\n        init: false\n    },\n    financialStatementsTree_revenues: {\n        init: false\n    }\n};\n\nmodule.exports = {\n    chart: chart\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/FrontendBundle/Resources/public/js/government/graph/config.js\n ** module id = 4\n ** module chunks = 0\n **/","var data = require('./glob.js').data;\nvar chart = require('./config.js').chart;\n\n/**\n * Initialization\n */\nfunction init() {\n    financialHealth_one();\n    financialHealth_two();\n    financialHealth_three();\n}\n\n/**\n * public-safety-pie\n */\nfunction financialHealth_one() {\n    /**\n     * Ahtung! Hardcode detected!\n     * todo replace such bad code\n     */\n    if (! data['public_safety_exp_over_tot_gov_fund_revenue']) {\n        data['public_safety_exp_over_tot_gov_fund_revenue'] = data['public_safety_expense_total_governmental_fund_revenue'];\n    }\n\n    if (! data['public_safety_exp_over_tot_gov_fund_revenue']) {\n        return;\n    }\n\n    var chart, options, vis_data;\n    vis_data = new google.visualization.DataTable();\n    vis_data.addColumn('string', 'Public Safety Expense');\n    vis_data.addColumn('number', 'Total');\n    vis_data.addRows([['Public Safety Exp', 1 - data['public_safety_exp_over_tot_gov_fund_revenue']], ['Other', +data['public_safety_exp_over_tot_gov_fund_revenue']]]);\n    options = {\n        'title': 'Public safety expense',\n        'titleTextStyle': {\n            'fontSize': 12\n        },\n        'tooltip': {\n            'textStyle': {\n                'fontSize': 12\n            }\n        },\n        'width': 340,\n        'height': 300,\n        'is3D': 'true',\n        'colors': ['#005ce6', '#009933'],\n        'slices': {\n            1: {\n                offset: 0.2\n            }\n        },\n        'pieStartAngle': 45\n    };\n\n    var element = document.getElementById('public-safety-pie');\n    if (element) {\n        chart = new google.visualization.PieChart(element);\n        chart.draw(vis_data, options);\n    }\n}\n\n/**\n * fin-health-revenue-graph\n */\nfunction financialHealth_two() {\n\n    if (! data['total_revenue_per_capita']) {\n        return;\n    }\n\n    var chart, options, vis_data;\n    vis_data = new google.visualization.DataTable();\n    vis_data.addColumn('string', 'Per Capita');\n    vis_data.addColumn('number', 'Rev.');\n    vis_data.addRows([['Total Revenue \\n Per Capita', +data['total_revenue_per_capita']], ['Median Total \\n Revenue Per \\n Capita For All Cities', 420]]);\n    options = {\n        'title': 'Total Revenue',\n        'titleTextStyle': {\n            'fontSize': 12\n        },\n        'tooltip': {\n            'textStyle': {\n                'fontSize': 12\n            }\n        },\n        'width': 340,\n        'height': 300,\n        'isStacked': 'true',\n        'colors': ['#005ce6', '#009933'],\n        'chartArea.width': '100%'\n    };\n    chart = new google.visualization.ColumnChart(document.getElementById('fin-health-revenue-graph'));\n    chart.draw(vis_data, options);\n}\n\n/**\n * fin-health-expenditures-graph\n */\nfunction financialHealth_three() {\n\n    if (! data['total_expenditures_per_capita']) {\n        return;\n    }\n\n    var chart, options, vis_data;\n    vis_data = new google.visualization.DataTable();\n    vis_data.addColumn('string', 'Per Capita');\n    vis_data.addColumn('number', 'Exp.');\n    vis_data.addRows([['Total Expenditures \\n Per Capita', +data['total_expenditures_per_capita']], ['Median Total \\n Expenditures \\n Per Capita \\n For All Cities', 420]]);\n    options = {\n        'title': 'Total Expenditures',\n        'titleTextStyle': {\n            'fontSize': 12\n        },\n        'tooltip': {\n            'textStyle': {\n                'fontSize': 12\n            }\n        },\n        'width': 340,\n        'height': 300,\n        'isStacked': 'true',\n        'colors': ['#005ce6', '#009933'],\n        'chartArea.width': '100%'\n    };\n    chart = new google.visualization.ColumnChart(document.getElementById('fin-health-expenditures-graph'));\n    chart.draw(vis_data, options);\n}\n\n\nmodule.exports = {\n    init: init,\n    initAll: init\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/FrontendBundle/Resources/public/js/government/graph/financial-health.js\n ** module id = 5\n ** module chunks = 0\n **/","var data = require('./glob.js').data;\nvar chart = require('./config.js').chart;\n\n/**\n * Initialization\n */\nfunction init() {\n    handler_switchChart();\n    financialStatements_revenue();\n    financialStatements_expenditures();\n    financialStatementsTree_expenditures();\n    financialStatementsTree_revenues();\n}\n\n/**\n * #total-revenue-pie\n */\nfunction financialStatements_revenue() {\n\n    var chart, item, len3, options, p, r, ref1, rows, vis_data;\n    vis_data = new google.visualization.DataTable();\n    vis_data.addColumn('string', 'Total Gov. Expenditures');\n    vis_data.addColumn('number', 'Total');\n    rows = [];\n\n    var revenues = data.financialStatements.Revenues;\n    for(var key in revenues){\n        if(revenues.hasOwnProperty(key) && (revenues[key].caption != 'Total Revenues')) {\n            r = [revenues[key].caption, parseInt(revenues[key].totalfunds)];\n            rows.push(r);\n        }\n    }\n\n    vis_data.addRows(rows);\n    options = {\n        'title': 'Total Revenues',\n        'titleTextStyle': {\n            'fontSize': 16\n        },\n        'tooltip': {\n            'textStyle': {\n                'fontSize': 12\n            }\n        },\n        'width': 470,\n        'height': 350,\n        'pieStartAngle': 60,\n        'sliceVisibilityThreshold': .05,\n        'forceIFrame': true,\n        'chartArea': {\n            width: '90%',\n            height: '75%'\n        }\n    };\n    chart = new google.visualization.PieChart(document.getElementById('total-revenue-pie'));\n    chart.draw(vis_data, options);\n}\n\n/**\n * #total-expenditures-pie\n */\nfunction financialStatements_expenditures() {\n\n    var chart, item, len3, options, p, r, ref1, rows, vis_data;\n    vis_data = new google.visualization.DataTable();\n    vis_data.addColumn('string', 'Total Gov. Expenditures');\n    vis_data.addColumn('number', 'Total');\n    rows = [];\n\n    var expenditures = data.financialStatements.Expenditures;\n    for(var key in expenditures){\n        if(expenditures.hasOwnProperty(key) && (expenditures[key].caption != 'Total Expenditures')) {\n            r = [expenditures[key].caption, parseInt(expenditures[key].totalfunds)];\n            rows.push(r);\n        }\n    }\n\n    vis_data.addRows(rows);\n    options = {\n        'title': 'Total Expenditures',\n        'titleTextStyle': {\n            'fontSize': 16\n        },\n        'tooltip': {\n            'textStyle': {\n                'fontSize': 12\n            }\n        },\n        'width': 470,\n        'height': 350,\n        'pieStartAngle': 60,\n        'sliceVisibilityThreshold': .05,\n        'forceIFrame': true,\n        'chartArea': {\n            width: '90%',\n            height: '75%'\n        }\n    };\n    chart = new google.visualization.PieChart(document.getElementById('total-expenditures-pie'));\n    chart.draw(vis_data, options);\n}\n\n\n/**\n * TODO: Refactor\n * #total-revenue-tree\n */\nfunction financialStatementsTree_revenues() {\n\n    var chart, item, len3, options, p, r, ref1, RevenuesDataTable, vis_data;\n\n    RevenuesDataTable = [\n        ['Location', 'Parent', 'FinData', 'Heat'],\n        ['Total Revenues', null, 0, 0]\n    ];\n\n    var RevenuesData = data.financialStatements.Revenues;\n\n    // Prepare Revenues data to Google Tree Chart\n    for(var rKey in RevenuesData) {\n        if (RevenuesData.hasOwnProperty(rKey)){\n\n            var subCategory = RevenuesData[rKey];\n            var subCatValue = getSubCatValue(subCategory);\n            if (!subCatValue) {\n                continue;\n            }\n\n            RevenuesDataTable.push(\n                [subCategory.caption, 'Total Revenues', parseInt(subCatValue), parseInt(subCatValue)]\n            );\n\n        }\n    }\n\n\n    /**\n     * TODO: Hardcoded!! Please ask the question to client, which field must be there?\n     */\n    function getSubCatValue(subCategory) {\n\n        if (subCategory.totalfunds) {\n\n            if (subCategory.totalfunds < 0) {\n                subCategory.totalfunds = -(subCategory.totalfunds);\n            }\n\n        }\n\n        return subCategory.totalfunds || false;\n    }\n\n    var options = {\n        highlightOnMouseOver: true,\n        maxDepth: 1,\n        maxPostDepth: 2,\n        minHighlightColor: '#8c6bb1',\n        midHighlightColor: '#9ebcda',\n        maxHighlightColor: '#edf8fb',\n        minColor: '#009688',\n        midColor: '#f7f7f7',\n        maxColor: '#ee8100',\n        headerHeight: 15,\n        showScale: true,\n        height: 500,\n        useWeightedAverageForAggregation: true,\n        generateTooltip: revenuesTooltip\n    };\n\n    function revenuesTooltip(row, size, value) {\n        var val = vis_data.getValue(row, 2);\n        return '<div style=\"background:#7bbaff; color: #fff; padding:10px; border-style:solid\">Total Funds: ' +\n            numeral(val).format('$0,0'); + '</div>';\n    }\n\n\n    vis_data = new google.visualization.arrayToDataTable(RevenuesDataTable);\n    chart = new google.visualization.TreeMap(document.getElementById('total-revenue-tree'));\n    chart.draw(vis_data, options);\n}\n\n/**\n * TODO: Refactor\n * #total-expenditures-tree\n */\nfunction financialStatementsTree_expenditures() {\n\n    var chart, item, len3, options, p, r, ref1, ExpendituresDataTable, RevenuesDataTable, vis_data;\n\n    ExpendituresDataTable = [\n        ['Location', 'Parent', 'FinData', 'Heat'],\n        ['Total Expenditures', null, 0, 0]\n    ];\n\n    var ExpendituresData = data.financialStatements.Expenditures;\n\n    // Prepare ExpendituresData data to Google Tree Chart\n    for(var eKey in ExpendituresData) {\n        if (ExpendituresData.hasOwnProperty(eKey)){\n\n            var subCategory = ExpendituresData[eKey];\n            var subCatValue = getSubCatValue(subCategory);\n            if (!subCatValue) {\n                continue;\n            }\n\n            ExpendituresDataTable.push(\n                [subCategory.caption, 'Total Expenditures', parseInt(subCatValue), parseInt(subCatValue)]\n            );\n\n        }\n    }\n\n    function getSubCatValue(subCategory) {\n\n        if (subCategory.totalfunds) {\n\n            if (subCategory.totalfunds < 0) {\n                subCategory.totalfunds = -(subCategory.totalfunds);\n            }\n\n        }\n\n        return subCategory.totalfunds || false;\n    }\n\n    var options = {\n        highlightOnMouseOver: true,\n        maxDepth: 1,\n        maxPostDepth: 2,\n        minHighlightColor: '#8c6bb1',\n        midHighlightColor: '#9ebcda',\n        maxHighlightColor: '#edf8fb',\n        minColor: '#009688',\n        midColor: '#f7f7f7',\n        maxColor: '#ee8100',\n        headerHeight: 15,\n        showScale: true,\n        height: 500,\n        useWeightedAverageForAggregation: true,\n        generateTooltip: expendituresTooltip\n    };\n\n    function expendituresTooltip(row, size, value) {\n        var val = vis_data.getValue(row, 2);\n        return '<div style=\"background:#7bbaff; color: #fff; padding:10px; border-style:solid\">Total Funds: ' +\n            numeral(val).format('$0,0'); + '</div>';\n    }\n\n    vis_data = new google.visualization.arrayToDataTable(ExpendituresDataTable);\n    chart = new google.visualization.TreeMap(document.getElementById('total-expenditures-tree'));\n    chart.draw(vis_data, options);\n\n}\n\n/**\n * #Financial_Statements (.chart-controls .btn)\n */\nfunction handler_switchChart() {\n    $('#Financial_Statements').on('click', '.chart-controls .btn', function() {\n\n        var chartType = this.getElementsByTagName('input')[0].id;\n\n        if (chartType == 'chart'){\n            hideChartGroup('pie-charts', false);\n            hideChartGroup('tree-chart', true);\n            hideChartGroup('tree-charts', true);\n            if (!chart.financialStatements_one.init || !chart.financialStatements_two.init) {\n                financialStatements_one();\n                financialStatements_two();\n            }\n\n        } else if (chartType == 'tree') {\n\n            hideChartGroup('pie-charts', true);\n            hideChartGroup('tree-charts', true);\n            hideChartGroup('tree-chart', false);\n            if (!chart.financialStatementsTree.init) {\n                financialStatementsTree();\n            }\n        } else if (chartType == 'tree-charts') {\n            hideChartGroup('pie-charts', true);\n            hideChartGroup('tree-chart', true);\n            hideChartGroup('tree-charts', false);\n            if (!chart.financialStatementsTree_expenditures.init || !chart.financialStatementsTree_revenues.init) {\n                financialStatementsTree_expenditures();\n                financialStatementsTree_revenues();\n            }\n        }\n\n        /**\n         * Hide chart group. Group may contain few charts\n         */\n        function hideChartGroup(chartGroup, hide) {\n\n            var display = hide ? {display: 'none'} : {display: 'block'};\n\n            if (chartGroup == 'pie-charts') {\n                $('#total-expenditures-pie').css(display);\n                $('#total-revenue-pie').css(display);\n\n            } else if (chartGroup == 'tree-chart') {\n                $('#total-tree').css(display);\n\n            } else if (chartGroup == 'tree-charts') {\n                $('#total-expenditures-tree').css(display);\n                $('#total-revenue-tree').css(display);\n            }\n\n        }\n\n    });\n}\n\nmodule.exports = {\n    init: init,\n    initAll: init\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GovWiki/FrontendBundle/Resources/public/js/government/graph/financial-statement.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}