{% extends "GovWikiAdminBundle:Layout:main.html.twig" %}

{% block title %}{{ parent() }} - style{% endblock %}

{% block breadcrumb %}
    {{ macro.breadcrumbElement('Main', 'govwiki_admin_main_home') }}
    {{
        macro.breadcrumbElement(
            admin_environment|capitalize ~' environment',
            'govwiki_admin_main_show',
            { 'environment': admin_environment }
        )
    }}
    {{ macro.breadcrumbElement('Styles') }}
{% endblock breadcrumb %}

{% block body %}

    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-8 col-md-offset-2">

            <ul class="nav nav-tabs" id="environment-styles__tabs">
                <li class="active"><a data-toggle="tab" href="#home">CSS styles</a></li>
                <li><a data-toggle="tab" href="#menu1">Images</a></li>
            </ul>

            <div class="tab-content">
                <div id="home" class="tab-pane fade in active">
                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            <h3 class="panel-title">Environment CSS styles</h3>
                        </div>
                        <div class="panel-body" id="environment-styles">
                            {% if styles %}
                                {% for style in styles %}
                                    <div class="style__data-id" data-id="{{ style.id }}">
                                        <h5>{{ style.name }}</h5> <span class="environment-styles__classname">({{ style.className }})</span> <span data-id="{{ style.id }}" data-name="{{ style.name }}" class="environment-styles__delete">x</span><br>
                                        {% for prop in style.properties %}
                                            {% if prop[0] in ['color', 'background'] %}
                                                <div class="input-group color-picker">
                                                    <span class="input-group-addon"><span class="style__data-param">{{ prop[0] }}</span> <i></i></span>
                                                    <input class="style__data-value" type="text" value="{{ prop[1] }}" />
                                                </div>
                                            {% else %}
                                                <div class="input-group">
                                                    <span><span class="style__data-param">{{ prop[0] }}</span></span>
                                                    <input value="{{ prop[1] }}" class="style__data-value data-value-default" type="text">
                                                </div>
                                            {% endif %}
                                        {% endfor %}
                                    </div>
                                {% endfor %}
                            {% else %}
                                No styles
                            {% endif %}
                        </div>
                    </div>
                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            <h3 class="panel-title">Add new style</h3>
                        </div>
                        <div class="panel-body">
                            {{ form_start(form) }}
                            {{ form_widget(form) }}
                            <button type="submit" class="btn btn-primary">Add</button>
                            <a class="btn btn-default" href="{{ path('govwiki_admin_main_show') }}">
                                Back
                            </a>
                            {{ form_end(form) }}
                        </div>
                    </div>
                </div>
                <div id="menu1" class="tab-pane fade">
                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            <h3 class="panel-title">Environment images</h3>
                        </div>
                        <div class="panel-body">
                            {% for content in contents %}
                                {% if content.type == 'image' %}
                                    <h5>{{ content.name }}</h5>
                                    <img src="{{ content.value }}" />

                                    <form action="{{ path('govwiki_admin_main_loadimage') }}" class="upload-logo-form" enctype="multipart/form-data">
                                        <input type="hidden" name="id" value="{{ content.id }}" />
                                        <input type="hidden" name="environment" value="{{ admin_environment }}" />
                                        <input class="upload-logo" type="file" name="upload-image" />
                                    </form>
                                {% endif %}
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

{% endblock %}


{% block stylesheets %}
    {{ parent() }}
    {# Bootstrap colorpicker #}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-colorpicker/2.3.0/css/bootstrap-colorpicker.min.css"/>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="/bundles/ivoryckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        $(function() {
            $('.upload-logo-form').submit(function(e) {
                e.preventDefault();

                $form = $(this);
                $formData = new FormData($form.get(0));

                $.ajax({
                    url: $form.attr('action'),
                    type: 'POST',
                    contentType: false,
                    processData: false,
                    data: $formData,
                    dataType: 'json',
                    success: function (data) {
                        location.reload();
                    }
                });
            });

            $('.upload-logo-form').change(function() {
                $(this).submit();
            });

            var environmentStyles = {
                init: function() {
                    var obj = this;
                    $('#environment-styles input').change(function() {
                        var parent = $(this).parent().parent();
                        obj.changeAction(parent);
                    });

                    $('.color-picker').colorpicker({
                        format: 'hex',
                        align: 'left'
                    }).on('hidePicker', function(event){
                        obj.changeAction($(event.target).parent());
                    });

                    $('.environment-styles__delete').click(function() {
                        var el = $(this);
                        if (confirm('Delete "'+$(this).attr('data-name')+'" style?')) {
                            obj.deleteStyle($(this).attr('data-id'), el.parent())
                        }
                    });

                    $('form[name="govwiki_admin_form_styles"]').submit(function() {
                        var val = $('#govwiki_admin_form_styles_properties').val();

                        if (val.replace(/\s+/gi, '').length == 0) {
                            alert('Empty CSS');
                            return false;
                        }

                        if (val.split(';').length-1 == 0 || val.split(':').length-1 == 0) {
                            alert('Invalid CSS');
                            return false;
                        }

                        if (val.split(';').length-1 != val.split(':').length-1) {
                            alert('Invalid CSS');
                            return false;
                        }
                    });
                },
                changeAction: function(parent) {
                    var data = {
                        update: {
                            id: parent.attr('data-id'),
                            properties: {}
                        }
                    }

                    parent.find('.style__data-param').each(function(i) {
                        data.update.properties[i] = [
                            $(this).text(),
                            $(this).parent().parent().parent().find('.style__data-value').eq(i).val()
                        ];
                    });

                    $.ajax({
                        url: location.href,
                        data: data,
                        method: 'POST',
                        success: function (response) {
                            console.log(response);
                        }
                    });
                },
                deleteStyle: function(id, el) {
                    $.ajax({
                        url: location.href,
                        data: 'deleteId='+id,
                        method: 'POST',
                        success: function (response) {
                            console.log(response);
                            el.remove();
                        }
                    });
                }
            }

            environmentStyles.init();
        })
    </script>
{% endblock javascripts %}
