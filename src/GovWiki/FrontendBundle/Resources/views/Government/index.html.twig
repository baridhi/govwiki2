{% extends "GovWikiFrontendBundle:Layout:main.html.twig" %}

{% import _self as self %}

{% block main %}

    {% if government is defined %}
        <!--start section.introduction-->
        <section class="introduction">
            {# Government name & wikipedia links #}

            <div class="row_caption">
                <h1 class="caption">{{government.name}}</h1>
                {% if government.audit_url is defined and government.audit_url %}
                    <a href="{{government.audit_url}}" class="btn_audit">
                        Audit <span class="icon">A</span>
                    </a>
                {% else %}
                    <a href="{{government.latestAuditUrl.link}}" class="btn_audit">
                        Audit <span class="icon">A</span>
                    </a>
                {% endif %}
            </div>

            {# Begin Badge block #}
            <div class="row__sub_caption">
                {#  SB_DOWORK add firld in database  description  government     #}
                <h5 class="sub_caption">Municipal Fiscal Health</h5>
                <div class="group_select">

                    {% if years is defined and years|length > 1 %}
                        <select id="year-selector" class="select_years">
                            {%- if (app.request.attributes.get('_route') ==
                                'map') -%}
                            <option value="latest" {% if (currentYear == 'latest') -%}selected{%- endif -%}>
                                {%- endif -%}
                                {%- spaceless -%}
                                    Latest
                                {%- endspaceless -%}
                            </option>
                            {% for year in years %}
                                <option value="{{ year }}" {%-
                                    if (currentYear == year)
                                -%}
                                selected
                                        {%- endif -%}>
                                    {{- year -}}
                                </option>
                            {% endfor %}
                        </select>
                    {% endif %}
                </div>
            </div>

            {% if tabs is defined and tabs[0] is not empty and tabs[0] is defined %}
                {% include '@GovWikiFrontend/Partial/Government/generalInformation.html.twig' with { 'tab':tabs[0] } %}
            {% endif %}


            {#  End Badge block #}
        </section>
        <!--end section.introduction-->
    {% endif %}

    <section class="financial governmentController">

        {# Tabs control#}
        {% if government is defined %}

            {% for flash_message in app.session.flashbag.get('message_saved_success') %}
                <div class="row">
                    <div class="alert alert-success alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        {{ flash_message }}
                    </div>
                </div>
            {% endfor %}

            {# Tabs control #}
            <nav class="financial__navbar">
                <ul class="nav list_navbar">
                    {%- if (tabs is defined) and (tabs is not empty) -%}
                        {{- self.renderTabPils(tabs) -}}
                    {%- endif -%}
                </ul>
            </nav>

            {%- set commentChanged = government.commentChanges.changed -%}
            {%- set currentUserChangeComment = (app.user is not null)
                and (government.commentChanges.changedBy == app.user.id) -%}

            <div class="tab-content">
                {%- if (tabs is defined) and (tabs is not empty) -%}
                    {%- for tab in tabs|slice(1) -%}
                        <div class="tab-pane {{ loop.first ? 'in active' : '' -}}"
                             id="{{ self.tabSlug(tab.name) }}">
                            <div class="financial__content">
                                    {# Statistics #}
                                    {%- if loop.first -%}
                                        {# First tab. #}
                                        {{ include('GovWikiFrontendBundle:Partial/Government/Tabs:overviewElected.html.twig') }}
                                    {%- elseif tab.tabType == constant('GovWiki\\DbBundle\\Entity\\Tab::USER_DEFINED') -%}
                                        {# User defined tab #}
                                        {{-
                                        include('@GovWikiFrontend/Partial/Government/tab.html.twig')
                                        -}}
                                        {{ include('GovWikiFrontendBundle:Partial/Government/Tabs:employeeCompensation.html.twig') }}

                                        {{ include('GovWikiFrontendBundle:Partial/Government/Tabs:qualityServices.html.twig') }}

                                        {{ include('GovWikiFrontendBundle:Partial/Government/Tabs:financialHealth.html.twig') }}
                                    {%- else -%}
                                        {# Special tab #}
                                        {{-
                                        include('@GovWikiFrontend/Partial/Government/special_tab.html.twig')
                                        -}}
                                    {%- endif -%}
                            </div>
                        </div>
                    {%- endfor -%}
                {%- else -%}
                    <h3 class="text-center">No data. Please refresh page later</h3>
                {%- endif -%}
            </div>

        {% else %}
            <h3 class="text-center">No data</h3>
        {% endif %}
    </section>




        {% if app.user and environment_is_subscribable %}
            <div class="subscribe-row">
                <a href="{{-
                    path('govwiki_frontend_government_subscribe', {
                        'government': government.id
                    })
                -}}" class="btn {% if isSubscriber -%}btn-danger unsubscribe{%- else -%}btn-success subscribe{%- endif -%}" id="subscribe">
                    {%- if isSubscriber -%}
                        Unsubscribe
                    {%- else -%}
                        Subscribe
                    {%- endif -%}
                </a>
            </div>

            <div class="message_form_container" id="chat_message_container">
                {{ form_start(message_form) }}
                {{ form_row(message_form.text, {'label': 'Message'}) }}
                {{ form_row(message_form.submit, {'attr': {'class': 'btn btn-primary'}}) }}
                {{ form_end(message_form) }}
            </div>
        {% endif %}

        <br>
        <br>

        {% if bottomText %}
            <div class="panel panel-danger notice">
                <div class="panel-body">
                    {{ bottomText|raw }}
                </div>
            </div>
            <br>
        {% endif %}


    <div class="modal fade" id="addIssue" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-entity-type="Contribution">
        <div class="modal-dialog" role="document">
            {{- form_start(issueForm) -}}
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Add new Issue</h4>
                </div>
                <div class="modal-body">
                    {{ form_widget(issueForm) }}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add</button>
                </div>
            </div>
            {{- form_end(issueForm) -}}
        </div>
    </div>
{% endblock %}


{# Stylesheets #}
{% block stylesheets %}

    {{parent()}}

    {% stylesheets '@GovWikiFrontendBundle/Resources/public/css/government.scss' filter='scss' %}
        <link rel="stylesheet" href="{{ asset_url }}">
    {% endstylesheets %}

{% endblock %}


{# Javascripts #}
{% block javascripts %}

    {{parent()}}

    <script src="https://code.jquery.com/jquery-3.4.1.js" integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/numeral.js/1.4.5/numeral.min.js"></script>
    <script src='http://www.google.com/jsapi'></script>

    {% if government is defined %}
        <script>
            window.gw.government = '{{ government_json|escape('js') }}';
            window.gw.urls = {};
            window.gw.urls.popover = '{{ path('govwiki_api_v1_government_getranks', {
                'altTypeSlug': government.altTypeSlug,
                'slug': government.slug,
            }) }}';
            window.gw.urls.search = '{{ path('govwiki_api_v1_comparison_search') }}';
            window.gw.urls.captions = '{{ path('govwiki_api_v1_comparison_captions') }}';
            window.gw.urls.compare = '{{ path('govwiki_api_v1_comparison_compare') }}';
            window.gw.urls.create_request = '{{ path('govwiki_api_v1_createrequest_create') }}';
            window.gw.urls.edit_request = '{{ path('govwiki_api_v1_editrequest_create') }}';
        </script>
    {% endif %}

    <script src="/js/common.js"></script>
    <script src="/js/government.js"></script>

    <script>
        $( document ).ready(function() {
            $('#visualize').change(function() {
                let $class = $(this).val();
                let $removeElemClass, $addElemClass, $removeClasses;

                const KEY_TOTAL_GOV_FUNDS = '{{ (constant('GovWiki\\FrontendBundle\\Helpers\\FinancialStatements::KEY_TOTAL_GOV_FUNDS')) }}';
                const KEY_OTHER_FUNDS     = '{{ (constant('GovWiki\\FrontendBundle\\Helpers\\FinancialStatements::KEY_OTHER_FUNDS')) }}';
                const KEY_GENERAL_FUNDS   = '{{ (constant('GovWiki\\FrontendBundle\\Helpers\\FinancialStatements::KEY_GENERAL_FUNDS')) }}';

                switch ($class) {
                    case KEY_TOTAL_GOV_FUNDS:
                        $removeElemClass = [KEY_GENERAL_FUNDS, KEY_OTHER_FUNDS];
                        $addElemClass    = KEY_TOTAL_GOV_FUNDS;

                        break;
                    case KEY_OTHER_FUNDS:
                        $removeElemClass = [KEY_TOTAL_GOV_FUNDS, KEY_GENERAL_FUNDS];
                        $addElemClass    = KEY_OTHER_FUNDS;

                        break;
                    case KEY_GENERAL_FUNDS:
                        $removeElemClass = [KEY_TOTAL_GOV_FUNDS, KEY_OTHER_FUNDS];
                        $addElemClass    = KEY_GENERAL_FUNDS;

                        break;
                    default:
                        $removeClasses = [KEY_TOTAL_GOV_FUNDS, KEY_OTHER_FUNDS, KEY_GENERAL_FUNDS];

                        $removeClasses.forEach(function (element) {
                            clearAddClass(element);
                        });

                        return;
                }

                $removeElemClass.forEach(function (element) {
                    clearHideClass(element);
                });

                clearAddClass($addElemClass);


                function clearHideClass($removeElemClass) {
                    let $tdsRemove = $('.'+$removeElemClass);

                    $tdsRemove.each(function () {
                        let self = $(this);
                        changeClass(self, 'hide-table-td', 'show-table-td');
                    });
                }

                function clearAddClass($addElemClass) {
                    let $tdsAdd    = $('.'+$addElemClass);

                    $tdsAdd.each(function () {
                        let self = $(this);
                        changeClass(self, 'show-table-td', 'hide-table-td');
                    });
                }

                function changeClass(currentElem, addClass, removeClass) {
                    currentElem.addClass(addClass);
                    currentElem.removeClass(removeClass);
                }
            });
        });
    </script>

{% endblock %}

{%- macro tabSlug(tabName) -%}
    {{ tabName | replace(' ', '_') | replace('+', 'a') }}
{%- endmacro -%}

{%- macro renderTabPils(tabs) -%}
    {% import _self as self %}

    {%- for tab in tabs|slice(1) -%}
        {%- set slug = self.tabSlug(tab.name) -%}
        {%- if (tab.parent is null) -%}

            {%- if (tab.childrens|length > 0) -%}
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        {{- tab.name -}}&nbsp;
                        <i class="caret"></i>
                    </a>
                    <ul class="dropdown-menu">
                        {{- self.renderChildTabPils(tab.childrens) -}}
                    </ul>
                </li>
            {%- else -%}
                <li class="col-lg-3 {{ loop.first ? 'active' -}}">
                    <a class="tabs tab_{{ slug|lower }}"
                       href="#{{ slug }}" aria-controls="{{ slug }}"
                       role="tab" data-toggle="tab"
                       data-tabname="{{ tab.name }}">
                        {{- ('groups.group_id_'~tab.id)|trans -}}
                    </a>
                </li>
            {%- endif -%}
        {%- endif -%}
    {%- endfor -%}
{%- endmacro -%}

{%- macro renderChildTabPils(tabs) -%}
    {% import _self as self %}

    {%- for tab in tabs -%}
        {%- set slug = self.tabSlug(tab.name) -%}
        <li>
            <a class="tabs tab_{{ slug|lower }}"
               href="#{{ slug }}" aria-controls="{{ slug }}"
               role="tab" data-toggle="tab"
               data-tabname="{{ tab.name }}">
                {{- ('groups.group_id_'~tab.id)|trans -}}
            </a>
        </li>
    {%- endfor -%}
{%- endmacro -%}